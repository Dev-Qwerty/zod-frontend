[{"F:\\projects\\zod-frontend\\zod\\src\\index.js":"1","F:\\projects\\zod-frontend\\zod\\src\\reportWebVitals.js":"2","F:\\projects\\zod-frontend\\zod\\src\\App.js":"3","F:\\projects\\zod-frontend\\zod\\src\\components\\SignUp\\SignUp.js":"4","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\Profile\\Profile-MyProfile.js":"5","F:\\projects\\zod-frontend\\zod\\src\\components\\ConfirmEmail\\ConfirmEmail.js":"6","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\CreateProject\\CreateProject.js":"7","F:\\projects\\zod-frontend\\zod\\src\\components\\Login\\Login.js":"8","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\PendingInvites\\PendingInvites-MyProfile.js":"9","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\Base.js":"10","F:\\projects\\zod-frontend\\zod\\src\\components\\Home\\Home.js":"11","F:\\projects\\zod-frontend\\zod\\src\\components\\Board\\BCard.js":"12","F:\\projects\\zod-frontend\\zod\\src\\components\\Chat\\CreateChannel.js":"13","F:\\projects\\zod-frontend\\zod\\src\\components\\Board\\Board.js":"14","F:\\projects\\zod-frontend\\zod\\src\\components\\ResetPassword\\ResetPassword.js":"15","F:\\projects\\zod-frontend\\zod\\src\\components\\Chat\\ChatHome.js":"16","F:\\projects\\zod-frontend\\zod\\src\\components\\ProjectDashboard\\ProjectD.js":"17","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\Profile\\CmpProfile.js":"18","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\PendingInvites\\CmpPending.js":"19","F:\\projects\\zod-frontend\\zod\\src\\components\\Chat\\DynamicChatDisplay.js":"20","F:\\projects\\zod-frontend\\zod\\src\\functions\\refreshToken.js":"21","F:\\projects\\zod-frontend\\zod\\src\\components\\Board\\CreatePersonalBoard.js":"22","F:\\projects\\zod-frontend\\zod\\src\\components\\Board\\CreatePublicBoard.js":"23","F:\\projects\\zod-frontend\\zod\\src\\components\\Loader\\Loader.js":"24"},{"size":615,"mtime":1617953408806,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1617953408806,"results":"27","hashOfConfig":"26"},{"size":3181,"mtime":1621849135869,"results":"28","hashOfConfig":"26"},{"size":5388,"mtime":1619846161695,"results":"29","hashOfConfig":"26"},{"size":2143,"mtime":1619457566225,"results":"30","hashOfConfig":"26"},{"size":2331,"mtime":1619846161692,"results":"31","hashOfConfig":"26"},{"size":7870,"mtime":1622127596328,"results":"32","hashOfConfig":"26"},{"size":3962,"mtime":1619846161694,"results":"33","hashOfConfig":"26"},{"size":2142,"mtime":1619457578728,"results":"34","hashOfConfig":"26"},{"size":6859,"mtime":1620139862086,"results":"35","hashOfConfig":"26"},{"size":5665,"mtime":1621056780509,"results":"36","hashOfConfig":"26"},{"size":10672,"mtime":1621505839702,"results":"37","hashOfConfig":"26"},{"size":6331,"mtime":1622125666390,"results":"38","hashOfConfig":"26"},{"size":10029,"mtime":1622040552974,"results":"39","hashOfConfig":"26"},{"size":1391,"mtime":1618462804183,"results":"40","hashOfConfig":"26"},{"size":5578,"mtime":1622124268827,"results":"41","hashOfConfig":"26"},{"size":8606,"mtime":1621575183149,"results":"42","hashOfConfig":"26"},{"size":10224,"mtime":1620140127937,"results":"43","hashOfConfig":"26"},{"size":7323,"mtime":1620139652598,"results":"44","hashOfConfig":"26"},{"size":6830,"mtime":1622124268845,"results":"45","hashOfConfig":"26"},{"size":573,"mtime":1621494072882,"results":"46","hashOfConfig":"26"},{"size":7578,"mtime":1622024760589,"results":"47","hashOfConfig":"26"},{"size":11185,"mtime":1622130079654,"results":"48","hashOfConfig":"26"},{"size":461,"mtime":1621849136760,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"9zxbb8",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"F:\\projects\\zod-frontend\\zod\\src\\index.js",[],["109","110"],"F:\\projects\\zod-frontend\\zod\\src\\reportWebVitals.js",[],"F:\\projects\\zod-frontend\\zod\\src\\App.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\SignUp\\SignUp.js",["111"],"import React, { useEffect } from 'react';\r\nimport './SignUp.css';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Button from 'react-bootstrap-button-loader';\r\nimport {toast} from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css'; \r\n\r\ntoast.configure()\r\n\r\nconst { useState } = React;\r\n\r\nfunction SignUpPage() {    \r\n    const [fname, setfNameValue] = useState('');\r\n    const [lname, setlNameValue] = useState('');\r\n    const [email, setemailValue] = useState('');\r\n    const [password, setPasswordValue] = useState('');\r\n    const [cpassword, setCPasswordValue] = useState('');\r\n    const [loading, setLoader] = useState(false);\r\n    const [btnText, setBtnText] = useState('Sign Up');\r\n\r\n    const handlefNameChange = (e) => setfNameValue(e.target.value);\r\n    const handlelNameChange = (e) => setlNameValue(e.target.value);\r\n    const handleEmailChange = (e) => setemailValue(e.target.value);\r\n    const handlepasswordChange = (e) => setPasswordValue(e.target.value);\r\n    const handleCPasswordChange = (e) => setCPasswordValue(e.target.value);\r\n    return (\r\n        <div className=\"SignUpPage\">\r\n            <span className=\"zod-title\">zode</span>\r\n            <p className=\"zod-tagline\">Collaboration platform for software development teams</p>\r\n                <div className=\"card zod-signupcard\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Create a new account</h5>\r\n                        <div className=\"zod-signup-inputs\">\r\n                            <div className=\"input-group\"> \r\n                                <input type=\"text\" className=\"form-control input-sm zod-name-grp\" placeholder=\"First Name\" value={fname} onChange={handlefNameChange}/> \r\n                                <span className=\"input-group-btn\"></span> \r\n                                <input type=\"text\" className=\"form-control input-sm zod-name-grp\" placeholder=\"Last Name\" value={lname} onChange={handlelNameChange}/> \r\n                            </div> \r\n                            <input type=\"text\" placeholder=\"Email\" className=\"zod-signup-grp form-control\" value={email} onChange={handleEmailChange}></input>\r\n                            <input type=\"password\" placeholder=\"Password\" className=\"zod-signup-grp form-control\" value={password} onChange={handlepasswordChange}></input>\r\n                            <input type=\"password\" placeholder=\"Confirm Password\" className=\"zod-signup-grp form-control\" value={cpassword} onChange={handleCPasswordChange}></input>\r\n                            <Button variant=\"success\" loading={loading} className=\"zod-signup-btn zod-signup-grp\" onClick={SignUpRequest.bind(this, fname, lname, email, password, cpassword, setLoader, setBtnText)}>{btnText}</Button>\r\n                            <hr/>\r\n                            <button type=\"submit\" className=\"zod-google-btn-1\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"Google Logo\"></img>Sign up with Google</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <span className=\"zod-signuptxt\">Already have an account? <Link to=\"/login\" style={{ textDecoration: 'none', color: '#000', fontWeight: 'bold' }}>Login</Link></span>\r\n            <footer className=\"zod-footer\">\r\n                <ul>\r\n                    <li>Privacy & Terms</li>\r\n                    <li>Contact Us</li>\r\n                </ul>\r\n            </footer>\r\n        </div>\r\n        );\r\n}\r\n\r\nasync function SignUpRequest(fname, lname, email, password, cpassword, setLoader, setBtnText) {\r\n    setBtnText('Signing Up...');\r\n    setLoader(true);\r\n    if(fname === '' || lname === '' || email === '' || password === '') {\r\n        toast.warning('Please enter all fields!', {position: toast.POSITION.BOTTOM_LEFT});\r\n        setBtnText('Sign Up');\r\n        setLoader(false);\r\n        return;\r\n    }\r\n    else if(password !== cpassword) {\r\n        toast.error('Passwords not matching!', {position: toast.POSITION.BOTTOM_LEFT});\r\n        setBtnText('Sign Up');\r\n        setLoader(false);\r\n        return;\r\n    }\r\n    else {\r\n    const reqBody = {\r\n        \"fname\": fname,\r\n        \"lname\": lname,\r\n        \"email\": email, \r\n        \"password\": password\r\n    }\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin' : '*'\r\n        }\r\n    }\r\n    axios.post('https://userservice-zode.herokuapp.com/api/user/signup', reqBody, config).then((response) => {\r\n        if(response.status === 201) {\r\n            localStorage.setItem(\"email\", email);\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/confirmEmail';\r\n        }\r\n    }).finally(()=> {\r\n        setLoader(false);\r\n        setBtnText('Sign Up');\r\n    }).catch(error => {\r\n        if(error.response.data.error === 'user with the provided email already exists') {\r\n            toast.warning(\"Account with the given email already exists!\", {position: toast.POSITION.BOTTOM_LEFT});\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/login';\r\n        }\r\n        else {\r\n            toast.error(error.response.data.error, {position: toast.POSITION.BOTTOM_LEFT});\r\n        }\r\n    })\r\n    }\r\n}\r\n\r\nexport default SignUpPage;","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\Profile\\Profile-MyProfile.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\ConfirmEmail\\ConfirmEmail.js",["112"],"import './ConfirmEmail.css';\r\nimport sendMsgSVG from '../../assets/send-message.svg';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ConfirmEmail() {\r\n    const [seconds, setSeconds] = React.useState(30);\r\n    let [isDisabled, setDisabled] = React.useState(false);\r\n    var btn = document.getElementById('resend-btn');\r\n    React.useEffect(() => {\r\n        if (seconds > 0) {\r\n            setDisabled(true);\r\n            setTimeout(() => setSeconds(seconds - 1), 1000);\r\n        } else {\r\n            setDisabled(false);  \r\n            setSeconds(0);\r\n        }\r\n\r\n        const cleanup = () => {\r\n            localStorage.removeItem(\"email\");\r\n        }\r\n        \r\n        window.addEventListener('beforeunload', cleanup);\r\n        \r\n    });\r\n\r\n    async function handleBtnClicked() {\r\n        const reqBody = {\r\n            \"email\": localStorage.getItem(\"email\"), \r\n        }\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }\r\n        axios.post('https://userservice-zode.herokuapp.com/api/user/resendverificationemail', reqBody, config).then((response) => {\r\n            if(response.status === 200) {\r\n                alert(\"Verification Email sent to your mail. Please check.\");\r\n            }\r\n        })\r\n        \r\n        btn.setAttribute(\"disabled\",\"\");\r\n        setSeconds(30);\r\n        setTimeout(()=> {\r\n            document.getElementById('resend-btn').removeAttribute('disabled');\r\n        }, 30000);\r\n    }\r\n    return(\r\n        <div className=\"ConfirmEmailPage\">\r\n            <span className=\"zod-ctitle\">zode</span>\r\n            <div className=\"sendMsg-svg\">\r\n                <img src={sendMsgSVG} alt=\"send email svg\" className=\"send-svg\"></img>\r\n            </div>\r\n            <div className=\"zod-cheading\">\r\n                <h1>You're almost there!</h1>\r\n                <p>We have sent a verificaton email to {localStorage.getItem(\"email\")}.<br></br>Please click the link to verify your account.</p>\r\n            </div>\r\n            <div className=\"zod-mail-timer\">\r\n                <p>Didn't receive the mail? <button id=\"resend-btn\" disabled={isDisabled} onClick={handleBtnClicked.bind()}>Resend</button> in {seconds} seconds.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmEmail;","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\CreateProject\\CreateProject.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Login\\Login.js",["113"],"import './Login.css';\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nimport React from 'react';\r\nimport Button from 'react-bootstrap-button-loader';\r\nimport {toast} from 'react-toastify'; \r\n\r\ntoast.configure()\r\n\r\nconst { useState } = React;\r\nfunction LoginPage() {\r\n    const [email, setemailValue] = useState('');\r\n    const [password, setPasswordValue] = useState('');\r\n    const [loading, setLoader] = useState(false);\r\n    const [btnText, setBtnText] = useState('Login');\r\n    \r\n    const handleEmailChange = (e) => setemailValue(e.target.value);\r\n    const handlepasswordChange = (e) => setPasswordValue(e.target.value);\r\n    return (\r\n        <div className=\"LoginPage\">\r\n            <span className=\"zod-title\">zode</span>\r\n            <p className=\"zod-tagline\">Collaboration platform for software development teams</p>\r\n                <div className=\"card zod-logincard\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Login to your account</h5>\r\n                        <div className=\"zod-login-inputs\">\r\n                            <input type=\"text\" placeholder=\"Enter email\" className=\"zod-login-grp form-control\" value={email} onChange={handleEmailChange}></input>\r\n                            <input type=\"password\" placeholder=\"Enter password\" className=\"zod-login-grp form-control\" value={password} onChange={handlepasswordChange}></input>\r\n                            <Button variant=\"success\" loading={loading} className=\"zod-login-btn zod-login-grp\" onClick={LoginRequest.bind(this, email, password, setLoader, setBtnText)}>{btnText}</Button>\r\n                            <hr/>\r\n                            <button type=\"submit\" className=\"zod-google-btn\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"Google Logo\"></img>Login with Google</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <span className=\"zod-logintxt\">Don't have an account? <Link to=\"/signup\" style={{ textDecoration: 'none', color: '#000', fontWeight: 'bold' }}>Sign Up</Link></span>\r\n            <footer>\r\n                <ul>\r\n                    <li>Privacy & Terms</li>\r\n                    <li>Contact Us</li>\r\n                </ul>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LoginRequest(email, password, setLoader, setBtnText) {\r\n    setLoader(true);\r\n    setBtnText('Logging in...');\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n        // Signed in\r\n        var user = userCredential.user;\r\n        if(user.emailVerified) {\r\n            localStorage.setItem('token', user.za);\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/basedashboard/home';\r\n        }\r\n        else {\r\n            localStorage.setItem('email', email);\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/confirmEmail';\r\n        }\r\n        \r\n    })\r\n    .catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        setBtnText(\"Sign In\");\r\n        setLoader(false);\r\n        if(errorMessage === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n            toast.info(\"No account exists with given email. Please sign up!\", {position: toast.POSITION.BOTTOM_LEFT});\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/signup'; \r\n        }\r\n        else if(errorMessage === \"The password is invalid or the user does not have a password.\") {\r\n            toast.error(\"Invalid email or password! Please check.\", {position: toast.POSITION.BOTTOM_LEFT});\r\n        }\r\n        else {\r\n            toast.error(errorMessage, {position: toast.POSITION.BOTTOM_LEFT})\r\n        }\r\n\r\n    });\r\n}\r\n\r\nexport default LoginPage;","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\PendingInvites\\PendingInvites-MyProfile.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\Base.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Home\\Home.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Board\\BCard.js",["114"],"import './BCard.css';\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Draggable from 'react-draggable';\r\n\r\n \r\n/* \r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nexport default class Card extends React.Component {\r\n\r\n    constructor() {\r\n     \r\n        super();\r\n        this.state = {\r\n            data: ''\r\n        }\r\n    }\r\n\r\n    backToBaseFn = () => {\r\n        //localStorage.setItem('pdata');\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/basedashboard/home';       \r\n    }\r\n\r\n    logout = () => {\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/login';   \r\n    }\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <div className=\"Card\">\r\n                \r\n                <div className=\"c-top-nav\">\r\n\r\n                    <div className=\"c-left-wrapper\">\r\n                        <div className=\"c-lt\" onClick={ this.backToBaseFn }>\r\n                            <div className=\"c-arrow\"></div>\r\n                            <div><p className=\"c-lt-txt\">Back to Base Dashboard</p></div>\r\n                        </div>\r\n                        <div className=\"c-lb\"><p className=\"b-title\">zode</p></div>\r\n                    </div>\r\n    \r\n                    <div className=\"c-mid-wrapper\">\r\n                        <p>PROJECT&nbsp;&nbsp;DASHBOARD</p>\r\n                    </div>\r\n    \r\n                    <div className=\"c-right-wrapper\">\r\n                        <input type=\"submit\" value=\"Logout\" className=\"c-logout-btn\" onClick = { this.logout }></input>\r\n                    </div>\r\n    \r\n                </div>\r\n\r\n                <div className=\"c-body-wrapper\">\r\n\r\n                    <div className=\"c-left-nav\">\r\n                        \r\n                        <div className=\"c-left-nav-grid\">\r\n                            \r\n                            <Link to=\"/projectdashboard/home\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"c-lng1-wrapper\">\r\n                                    <div className=\"c-lng1\" data-tip data-for=\"homeTip\"></div>\r\n                                </div>\r\n                            </Link> \r\n\r\n                            <Link to=\"/projectdashboard/board/bhome\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"c-lng2\" data-tip data-for=\"boardTip\">\r\n                                </div>\r\n                            </Link>\r\n\r\n                            <Link to=\"/chat/createChannel\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"c-lng3\" data-tip data-for=\"chatTip\">\r\n                                </div>\r\n                            </Link>               \r\n\r\n                            <div className=\"c-lng4\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"c-lng5\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"c-lng6\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"c-lng7\" data-tip data-for=\"calTip\"></div>\r\n\r\n                            <ReactTooltip id=\"homeTip\" place=\"right\" effect=\"float\" type=\"dark\">Home</ReactTooltip> \r\n                            <ReactTooltip id=\"boardTip\" place=\"right\" effect=\"float\" type=\"dark\">Board</ReactTooltip>\r\n                            <ReactTooltip id=\"chatTip\" place=\"right\" effect=\"float\" type=\"dark\">Chat</ReactTooltip> \r\n                            <ReactTooltip id=\"calTip\" place=\"right\" effect=\"float\" type=\"dark\">Calender</ReactTooltip>\r\n                                                         \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"c-body\">\r\n                        \r\n                        <div className=\"cb-wrapper\">\r\n\r\n                            <div className=\"\">\r\n                                <input type=\"submit\" value=\"New List\" className=\"cb-new-list-btn\"></input>\r\n                            </div>\r\n\r\n                            <div className=\"cb-list-wrapper\">\r\n                                \r\n                                <div className=\"cb-list\">\r\n                                   \r\n                                    <div className=\"cbl-h\">\r\n                                        <div className=\"cblh-wr\">\r\n                                            <div className=\"cblh-p\"><p>Upcomming</p></div>\r\n                                            <div className=\"cblh-plus\"></div>\r\n                                        </div>\r\n\r\n                                        <div className=\"cblh-line\"></div>\r\n                                    </div>\r\n\r\n                                    <Draggable>  \r\n                                        <div className=\"dragg\">\r\n                                            <div className=\"cbl-card\">\r\n                                                <div className=\"cblc-taskname\">\r\n                                                    <p>Task Name</p>\r\n                                                </div>\r\n                                                <div className=\"cblc-wr\">\r\n                                                    <div className=\"cblc-profile\"><p>JD</p></div>\r\n                                                    <div><p className=\"cblc-date\">20-5-2021</p></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Draggable>\r\n                                    \r\n                                    <div className=\"cbl-card\">\r\n                                        <div className=\"cblc-taskname\">\r\n                                            <p>Task Name</p>\r\n                                        </div>\r\n                                        <div className=\"cblc-wr\">\r\n                                            <div className=\"cblc-profile\"><p>JD</p></div>\r\n                                            <div><p className=\"cblc-date\">20-5-2021</p></div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"cbl-card\">\r\n                                        <div className=\"cblc-taskname\">\r\n                                            <p>Task Name</p>\r\n                                        </div>\r\n                                        <div className=\"cblc-wr\">\r\n                                            <div className=\"cblc-profile\"><p>JD</p></div>\r\n                                            <div><p className=\"cblc-date\">20-5-2021</p></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"cb-list\">\r\n\r\n                                   <div className=\"cbl-h\">\r\n                                        <div className=\"cblh-wr\">\r\n                                            <div className=\"cblh-p\"><p>In Progress</p></div>\r\n                                            <div className=\"cblh-plus\"></div>\r\n                                        </div>\r\n\r\n                                        <div className=\"cblh-line\"></div>\r\n                                    </div>\r\n\r\n                                    <div className=\"cbl-card\">\r\n                                        <div className=\"cblc-taskname\">\r\n                                            <p>Task Name</p>\r\n                                        </div>\r\n                                        <div className=\"cblc-wr\">\r\n                                            <div className=\"cblc-profile\"><p>JD</p></div>\r\n                                            <div><p className=\"cblc-date\">20-5-2021</p></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"cbl-card\">\r\n                                        <div className=\"cblc-taskname\">\r\n                                            <p>Task Name</p>\r\n                                        </div>\r\n                                        <div className=\"cblc-wr\">\r\n                                            <div className=\"cblc-profile\"><p>JD</p></div>\r\n                                            <div><p className=\"cblc-date\">20-5-2021</p></div>\r\n                                        </div>\r\n                                    </div>                                  \r\n                                </div>\r\n\r\n                                <div className=\"cb-list\">\r\n\r\n                                    <div className=\"cbl-h\">\r\n                                        <div className=\"cblh-wr\">\r\n                                            <div className=\"cblh-p\"><p>Completed</p></div>\r\n                                            <div className=\"cblh-plus\"></div>\r\n                                        </div>\r\n\r\n                                        <div className=\"cblh-line\"></div>\r\n                                    </div>\r\n\r\n                                    <div className=\"cbl-card\">\r\n                                        <div className=\"cblc-taskname\">\r\n                                            <p>Task Name</p>\r\n                                        </div>\r\n                                        <div className=\"cblc-wr\">\r\n                                            <div className=\"cblc-profile\"><p>JD</p></div>\r\n                                            <div><p className=\"cblc-date\">20-5-2021</p></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"cb-list\">\r\n\r\n                                    <div className=\"cbl-h\">\r\n                                        <div className=\"cblh-wr\">\r\n                                            <div className=\"cblh-p\"><p>Frontend</p></div>\r\n                                            <div className=\"cblh-plus\"></div>\r\n                                        </div>\r\n\r\n                                        <div className=\"cblh-line\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n    \r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","F:\\projects\\zod-frontend\\zod\\src\\components\\Chat\\CreateChannel.js",["115","116","117"],"F:\\projects\\zod-frontend\\zod\\src\\components\\Board\\Board.js",["118","119","120"],"import './Board.css';\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport axios from 'axios';\r\n \r\n/* \r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nexport default class Board extends React.Component {\r\n\r\n    constructor() {\r\n     \r\n        super();\r\n        this.state = {\r\n            data: '',\r\n            pname: '',\r\n            personalArr: [],\r\n            publicArr: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n     \r\n        const token1 = localStorage.getItem('token');\r\n        const obj = JSON.parse(localStorage.getItem('pdata'));\r\n\r\n        this.setState({\r\n            pname : obj.projectName\r\n        }); \r\n\r\n        const config = {\r\n            headers: {\r\n                'Authorization': token1,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin' : '*',\r\n            }\r\n        }\r\n    \r\n        let url = 'https://boardservice-zode.herokuapp.com/api/board/' + obj.projectID;\r\n\r\n        axios.get(url, config)\r\n        .then((res) => {\r\n    \r\n            if(res.status === 200) {\r\n\r\n                const dat = res.data;\r\n                \r\n                for (const [index, value] of dat.entries()) {\r\n                    \r\n                    if(value.type == 'private') {\r\n                        \r\n                        this.setState({\r\n                            personalArr : [...this.state.personalArr, value]\r\n                        }); \r\n                    } else {\r\n\r\n                        this.setState({\r\n                            publicArr : [...this.state.publicArr, value]\r\n                        }); \r\n                    }\r\n                }\r\n\r\n                /*alert(JSON.stringify(this.state.personalArr));\r\n                alert(JSON.stringify(this.state.publicArr));*/\r\n\r\n            } else {\r\n\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });         \r\n    }\r\n\r\n    personalFn = () => {\r\n    \r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/projectdashboard/board/card';   \r\n    }\r\n\r\n    publicFn = () => {\r\n        \r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/projectdashboard/board/card';\r\n    }\r\n\r\n    backToBaseFn = () => {\r\n        //localStorage.setItem('pdata');\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/basedashboard/home';       \r\n    }\r\n\r\n    logout = () => {\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/login';   \r\n    }\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <div className=\"Board\">\r\n                \r\n                <div className=\"b-top-nav\">\r\n\r\n                    <div className=\"b-left-wrapper\">\r\n                        <div className=\"b-lt\" onClick={ this.backToBaseFn }>\r\n                            <div className=\"b-arrow\"></div>\r\n                            <div><p className=\"b-lt-txt\">Back to Base Dashboard</p></div>\r\n                        </div>\r\n                        <div className=\"b-lb\"><p className=\"b-title\">zode</p></div>\r\n                    </div>\r\n    \r\n                    <div className=\"b-mid-wrapper\">\r\n                        <p>PROJECT&nbsp;&nbsp;DASHBOARD</p>\r\n                    </div>\r\n    \r\n                    <div className=\"b-right-wrapper\">\r\n                        <input type=\"submit\" value=\"Logout\" className=\"b-logout-btn\" onClick = { this.logout }></input>\r\n                    </div>\r\n    \r\n                </div>\r\n\r\n                <div className=\"b-body-wrapper\">\r\n\r\n                    <div className=\"b-left-nav\">\r\n                        \r\n                        <div className=\"b-left-nav-grid\">\r\n                            \r\n                            <Link to=\"/projectdashboard/home\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"b-lng1-wrapper\">\r\n                                    <div className=\"b-lng1\" data-tip data-for=\"homeTip\"></div>\r\n                                </div>\r\n                            </Link> \r\n\r\n                            <Link to=\"/projectdashboard/board/bhome\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"b-lng2\" data-tip data-for=\"boardTip\">\r\n                                </div>\r\n                            </Link>\r\n\r\n                            <Link to=\"/chat/createChannel\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"b-lng3\" data-tip data-for=\"chatTip\">\r\n                                </div>\r\n                            </Link>               \r\n\r\n                            <div className=\"b-lng4\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"b-lng5\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"b-lng6\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"b-lng7\" data-tip data-for=\"calTip\"></div>\r\n\r\n                            <ReactTooltip id=\"homeTip\" place=\"right\" effect=\"float\" type=\"dark\">Home</ReactTooltip> \r\n                            <ReactTooltip id=\"boardTip\" place=\"right\" effect=\"float\" type=\"dark\">Board</ReactTooltip>\r\n                            <ReactTooltip id=\"chatTip\" place=\"right\" effect=\"float\" type=\"dark\">Chat</ReactTooltip> \r\n                            <ReactTooltip id=\"calTip\" place=\"right\" effect=\"float\" type=\"dark\">Calender</ReactTooltip>\r\n                                                         \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"b-body\">\r\n                        \r\n                        <div className=\"bb-proname\">\r\n                            <p>Project Name: { this.state.pname }</p>\r\n                        </div>\r\n                        <div className=\"bb-proLine\"></div>\r\n\r\n                        <div className=\"bb-wrapper\">\r\n                            \r\n                            <div className=\"bb-personalB\">\r\n\r\n                                <p className=\"bbPersonal-hdn\">Personal Boards</p>\r\n                                \r\n                                <div className=\"bbPersonal-card-wrapper\">\r\n\r\n                                    { !this.state.personalArr ? (\r\n                                    \r\n                                        <div className=\"gx-loading\">\r\n                                            <p>Loading...</p>\r\n                                        </div>                                    \r\n\r\n                                    ):( this.state.personalArr.map((pdat, i) => (\r\n                                        \r\n                                        <div className=\"bbPersonal-card\" onClick = { this.personalFn }>\r\n                                            <p className=\"bbPersonal-parag\">{ JSON.parse(JSON.stringify(pdat.boardName)) }</p>\r\n                                        </div>   \r\n                                    )))}   \r\n                                    \r\n                                    <Link to=\"/projectdashboard/board/personal/create\" style={{ textDecoration: 'none' }}>\r\n                                        <div className=\"bbPersonal-special-card\">\r\n                                            <div className=\"bbPersonal-xy\">\r\n                                                <div className=\"bbPersonal-plus\"></div>\r\n                                                <div><p className=\"bbPersonal-new-parag\">New Board</p></div>\r\n                                            </div>\r\n                                        </div>    \r\n                                    </Link>                                                           \r\n                                \r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"bb-publicB\">\r\n                                \r\n                                <p className=\"bbPublic-hdn\">Public Boards</p>\r\n                                \r\n                                <div className=\"bbPublic-card-wrapper\">\r\n                                    \r\n                                    { !this.state.publicArr ? (\r\n                                        \r\n                                        <div className=\"gx-loading\">\r\n                                            <p>Loading...</p>\r\n                                        </div>                                    \r\n\r\n                                    ):( this.state.publicArr.map((tdat, i) => (\r\n                           \r\n                                        <div className=\"bbPublic-card\" onClick = { this.publicFn }>\r\n                                            <p className=\"bbPublic-parag\">{ JSON.parse(JSON.stringify(tdat.boardName)) }</p>\r\n                                        </div>                                         \r\n                                    )))}    \r\n                                      \r\n                                    <Link to=\"/projectdashboard/board/public/create\" style={{ textDecoration: 'none' }}>\r\n                                        <div className=\"bbPublic-special-card\">\r\n                                            <div className=\"bbPublic-xy\">\r\n                                                <div className=\"bbPublic-plus\"></div>\r\n                                                <div><p className=\"bbPublic-new-parag\">New Board</p></div>\r\n                                            </div>\r\n                                        </div>                                                               \r\n                                    </Link>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","F:\\projects\\zod-frontend\\zod\\src\\components\\ResetPassword\\ResetPassword.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Chat\\ChatHome.js",["121","122","123","124","125","126","127"],"F:\\projects\\zod-frontend\\zod\\src\\components\\ProjectDashboard\\ProjectD.js",["128"],"import './ProjectD.css';\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport ReactTooltip from \"react-tooltip\";\r\n \r\n/* \r\n    HOME\r\n\r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nexport default class ProjectD extends React.Component {\r\n\r\n    constructor() {\r\n     \r\n        super();\r\n        this.state = {\r\n            data: ''\r\n        }\r\n    }\r\n\r\n    backToBaseFn = () => {\r\n        //localStorage.setItem('pdata');\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/basedashboard/home';       \r\n    }\r\n\r\n    logout = () => {\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/login';   \r\n    }\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <div className=\"ProjectD\">\r\n                \r\n                <div className=\"pd-top-nav\">\r\n\r\n                    <div className=\"pd-left-wrapper\">\r\n                        <div className=\"pd-lt\" onClick={ this.backToBaseFn }>\r\n                            <div className=\"pd-arrow\"></div>\r\n                            <div><p className=\"pd-lt-txt\">Back to Base Dashboard</p></div>\r\n                        </div>\r\n                        <div className=\"pd-lb\"><p className=\"pd-title\">zode</p></div>\r\n                    </div>\r\n    \r\n                    <div className=\"pd-mid-wrapper\">\r\n                        <p>PROJECT&nbsp;&nbsp;DASHBOARD</p>\r\n                    </div>\r\n    \r\n                    <div className=\"pd-right-wrapper\">\r\n                        <input type=\"submit\" value=\"Logout\" className=\"pd-logout-btn\" onClick = { this.logout }></input>\r\n                    </div>\r\n    \r\n                </div>\r\n\r\n                <div className=\"pd-body-wrapper\">\r\n\r\n                    <div className=\"pd-left-nav\">\r\n                        \r\n                        <div className=\"pd-left-nav-grid\">\r\n                            \r\n                            <Link to=\"/projectdashboard/home\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"pd-lng1-wrapper\">\r\n                                    <div className=\"pd-lng1\" data-tip data-for=\"homeTip\"></div>\r\n                                </div>\r\n                            </Link> \r\n\r\n                            <Link to=\"/projectdashboard/board/bhome\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"pd-lng2\" data-tip data-for=\"boardTip\">\r\n                                </div>\r\n                            </Link>\r\n\r\n                            <Link to=\"/chat/home\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"pd-chat\" data-tip data-for=\"chatTip\">\r\n                                </div>\r\n                            </Link>               \r\n\r\n                            <div className=\"pd-lng4\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"pd-lng5\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"pd-lng6\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"pd-lng7\" data-tip data-for=\"calTip\"></div>\r\n\r\n                            <ReactTooltip id=\"homeTip\" place=\"right\" effect=\"float\" type=\"dark\">Home</ReactTooltip> \r\n                            <ReactTooltip id=\"boardTip\" place=\"right\" effect=\"float\" type=\"dark\">Board</ReactTooltip>\r\n                            <ReactTooltip id=\"chatTip\" place=\"right\" effect=\"float\" type=\"dark\">Chat</ReactTooltip> \r\n                            <ReactTooltip id=\"calTip\" place=\"right\" effect=\"float\" type=\"dark\">Calender</ReactTooltip>\r\n                                                         \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"pd-body\">\r\n                        \r\n                        <div className=\"pdb-hdn-wrapper\">\r\n\r\n                            <div className=\"pdb-hdn-left\">\r\n                                <div className=\"pdb-hl-1\"><p>Project Name</p></div>\r\n                                <div className=\"pdb-hl-2\"><p>Team Lead: <span className=\"wrx\">John Doe</span></p></div>\r\n                            </div>\r\n\r\n                            <div className=\"pdb-hdn-right\">\r\n                                <div className=\"pdb-hr-1\"><p>Due By: 30-June-2021</p></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"pdb-milestones\">\r\n                            \r\n                            <p className=\"pdbm-hdn\">Milestones</p>\r\n                            <div className=\"pdbm-list\">\r\n\r\n                                <div className=\"pdbm-list-item1\">\r\n\r\n                                    <div className=\"pdbm-dot\"></div>\r\n                                    <div className=\"pdbm-task\">\r\n                                        <p>Complete Project Service</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-status\">\r\n                                        <p>Completed</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-name\">\r\n                                        <p>John Doe</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-date\">\r\n                                        <p>12-April-2021</p>\r\n                                    </div>                                                                        \r\n                                </div>\r\n\r\n                                <div className=\"pdbm-list-item1\">\r\n\r\n                                    <div className=\"pdbm-dot\"></div>\r\n                                    <div className=\"pdbm-task\">\r\n                                        <p>Complete Project Service</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-status\">\r\n                                        <p>Completed</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-name\">\r\n                                        <p>John Doe</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-date\">\r\n                                        <p>12-April-2021</p>\r\n                                    </div>                                                                        \r\n                                </div>\r\n\r\n                                <div className=\"pdbm-list-item1\">\r\n\r\n                                    <div className=\"pdbm-dot\"></div>\r\n                                    <div className=\"pdbm-task\">\r\n                                        <p>Complete Project Service</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-status\">\r\n                                        <p>Completed</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-name\">\r\n                                        <p>John Doe</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-date\">\r\n                                        <p>12-April-2021</p>\r\n                                    </div>                                                                        \r\n                                </div>\r\n\r\n                                <div className=\"pdbm-list-item1\">\r\n\r\n                                    <div className=\"pdbm-dot\"></div>\r\n                                    <div className=\"pdbm-task\">\r\n                                        <p>Complete Project Service</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-status\">\r\n                                        <p>Completed</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-name\">\r\n                                        <p>John Doe</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-date\">\r\n                                        <p>12-April-2021</p>\r\n                                    </div>                                                                        \r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\Profile\\CmpProfile.js",["129","130","131","132","133","134","135"],"import './CmpProfile.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n/* \r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nexport default class CmpProfile  extends React.Component {\r\n\r\n    constructor() {\r\n     \r\n        super();\r\n        this.state = {\r\n            fname: '',\r\n            lname: '',\r\n            email: '',\r\n            valx: false,\r\n            fnameChange: false,\r\n            lnameChange: false\r\n        }   \r\n\r\n    }   \r\n    \r\n    componentDidMount(){\r\n     \r\n        const token1 = localStorage.getItem('token');\r\n\r\n        const config = {\r\n            headers: {\r\n                'Authorization': token1,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin' : '*',\r\n            }\r\n        }\r\n    \r\n        axios.get('https://userservice-zode.herokuapp.com/api/user/', config)\r\n        .then((res) => {\r\n    \r\n            if(res.status === 200) {\r\n                this.setState({\r\n                    fname: res.data.fname,\r\n                    lname: res.data.lname,\r\n                    email: res.data.email,\r\n                    valx: true\r\n                  });\r\n            } else {\r\n\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });         \r\n    }\r\n\r\n    render() {        \r\n\r\n        return (\r\n            <div className=\"MyProfile\">\r\n\r\n                <div className=\"mp-wrapper\">\r\n                    \r\n                    { !this.state.valx ? (\r\n                        <div className=\"mp-loading\">\r\n                            <p>Loading...</p>\r\n                        </div>\r\n                    ):(\r\n                        <p></p>\r\n                    )\r\n                    }\r\n                  \r\n                    <div className=\"mp-profile-img\"></div>\r\n                    \r\n                    <div className=\"mp-inp-wrapper\">    \r\n\r\n                        <div className=\"mp-x\">\r\n\r\n                            <div className=\"mp-class1\">\r\n                                \r\n                                <div className=\"mp-fname\">\r\n                                    <p className=\"mp-name-label\">First Name</p>\r\n                                    <div><input type=\"text\" placeholder=\"\"  className=\"mp-name-inp1\" value={this.state.fname} onChange={evt => this.updateFname(evt)}></input></div>\r\n                                </div>\r\n                                \r\n                                <div className=\"mp-lname\">\r\n                                    <p className=\"mp-name-label\">Last Name</p>\r\n                                    <div className=\"mp-name-inp\"><input type=\"text\" placeholder=\"\"  className=\"mp-name-inp2\" value={this.state.lname} onChange={evt => this.updateLname(evt)}></input></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"mp-class2\">\r\n                                <p className=\"mp-email\">Email</p>\r\n                                <div><input type=\"text\" placeholder=\"\" className=\"mp-email-inp\" value={this.state.email} disabled></input></div>                            \r\n                                <div><input value=\"Update Profile\" type=\"submit\" className=\"mp-update-btn\" onClick = { this.updateProfile } ></input></div> \r\n                                <div><input value=\"Delete Account\" type=\"submit\" className=\"mp-delete-btn\"onClick = { this.deleteAccount } ></input></div> \r\n                            </div>\r\n\r\n                            <ToastContainer />\r\n                        </div>            \r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    updateFname = (evt) => {\r\n\r\n        this.setState({\r\n            fname: evt.target.value,\r\n            fnameChange: true\r\n          });\r\n    }    \r\n\r\n    updateLname = (evt) => {\r\n\r\n        this.setState({\r\n            lname: evt.target.value,\r\n            lnameChange: true\r\n          });     \r\n    } \r\n    \r\n    updateProfile = () => {\r\n\r\n        if(this.state.fnameChange == true && this.state.lnameChange == true) {\r\n            \r\n            const token = localStorage.getItem('token');\r\n\r\n            const reqBody = {\r\n                \"fname\": this.state.fname,\r\n                \"lname\": this.state.lname\r\n            }\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin' : '*',\r\n                }\r\n            }\r\n        \r\n            axios.put('https://userservice-zode.herokuapp.com/api/user/update', reqBody, config)\r\n            .then((res) => {\r\n        \r\n                if(res.status === 200) {\r\n                    \r\n                    toast.info('First & Last Name Changed!', {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                    \r\n                    this.setState({\r\n                        lnameChange: false,\r\n                        fnameChange: false\r\n                    }); \r\n\r\n                } else {\r\n                    toast.warning('Error!', {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });  \r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            }); \r\n\r\n        } else if(this.state.fnameChange == true) {\r\n            \r\n            const token = localStorage.getItem('token');\r\n    \r\n            const reqBody = {\r\n                \"fname\": this.state.fname,\r\n            }\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin' : '*',\r\n                }\r\n            }\r\n        \r\n            axios.put('https://userservice-zode.herokuapp.com/api/user/update', reqBody, config)\r\n            .then((res) => {\r\n        \r\n                if(res.status === 200) {\r\n                    \r\n                    toast.info('First Name Changed!', {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n\r\n                    this.setState({\r\n                        fnameChange: false\r\n                    }); \r\n\r\n                } else {\r\n                    toast.warning('Error!', {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });  \r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            }); \r\n\r\n        } else if(this.state.lnameChange == true){\r\n            \r\n            const token = localStorage.getItem('token');\r\n    \r\n            const reqBody = {\r\n                \"lname\": this.state.lname\r\n            }\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin' : '*',\r\n                }\r\n            }\r\n        \r\n            axios.put('https://userservice-zode.herokuapp.com/api/user/update', reqBody, config)\r\n            .then((res) => {\r\n        \r\n                if(res.status === 200) {\r\n                    \r\n                    toast.info('Last Name Changed!', {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n\r\n                    this.setState({\r\n                        lnameChange: false\r\n                    }); \r\n\r\n                } else {\r\n                    toast.warning('Error!', {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });  \r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            }); \r\n\r\n        } else {\r\n            alert('Nothing Updated!')\r\n        }     \r\n    }      \r\n \r\n    deleteAccount = () => {\r\n\r\n        var r = window.confirm(\"Confirm: Delete Account\");\r\n        if(r == true) {\r\n            toast.error('Account Deleted!', {\r\n                position: \"bottom-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            }); \r\n        } else {\r\n\r\n        } \r\n    \r\n    }     \r\n}","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\PendingInvites\\CmpPending.js",["136","137"],"import './CmpPending.css';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport firebase from 'firebase';\r\n\r\n/* \r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nexport default class CmpPending  extends React.Component {\r\n\r\n    constructor() {\r\n     \r\n        super();\r\n        this.state = {\r\n            apiData: null,\r\n            isEmpty: false\r\n        }   \r\n\r\n    }   \r\n    \r\n    componentDidMount(){\r\n\r\n        this.timer = setInterval(\r\n            () => {\r\n                console.log(\"CALLED\");\r\n                firebase.auth().onAuthStateChanged(function(user) {\r\n                    if (user) {\r\n                        // User is signed in.\r\n                        firebase.auth().currentUser.getIdToken(true) // here we force a refresh\r\n                        .then(function(token) {\r\n                            localStorage.setItem(\"token\", token);\r\n                        }).catch(function(error) {\r\n                        if (error) throw error\r\n                    });\r\n                } else {\r\n                  // No user is signed in.\r\n                  alert(\"User not signed in!\");\r\n                }\r\n              });\r\n            },\r\n            600000, //10 mins\r\n        );        \r\n     \r\n        const token = localStorage.getItem('token');\r\n\r\n        const config = {\r\n            headers: {\r\n                'Authorization': token,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin' : '*',\r\n            }\r\n        }\r\n    \r\n        axios.get('https://projectservice-zode.herokuapp.com/api/projects/invites', config)\r\n        .then((res) => {\r\n    \r\n            if(res.status === 200) {\r\n                this.setState({ apiData: res.data });\r\n                if(res.data == null) {\r\n                    this.setState({ isEmpty: true });\r\n                } else {\r\n                    this.setState({ isEmpty: false }); \r\n                }\r\n            } else {\r\n\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });         \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    acceptfn(pid) {\r\n\r\n        const atoken = localStorage.getItem('token');\r\n\r\n        const config = {\r\n            headers: {\r\n                'Authorization': atoken,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin' : '*',\r\n            }\r\n        }\r\n        \r\n        const reqBody = {\r\n            \"projectID\": pid\r\n        }\r\n\r\n        axios.put('https://projectservice-zode.herokuapp.com/api/projects/acceptInvite', reqBody, config)\r\n        .then((res) => {\r\n    \r\n            if(res.status === 200) {\r\n                toast.info('Accepted!', {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 3000);\r\n                \r\n            } else {\r\n                toast.warning('Error!', {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });  \r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });         \r\n    }\r\n\r\n    rejectfn(pid) {\r\n\r\n        const rtoken = localStorage.getItem('token');\r\n\r\n        const config = {\r\n            headers: {\r\n                'Authorization': rtoken,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin' : '*',\r\n            }\r\n        }\r\n        \r\n        const reqBody = {\r\n            \"projectID\": pid\r\n        }\r\n\r\n        axios.put('https://projectservice-zode.herokuapp.com/api/projects/rejectinvite', reqBody, config)\r\n        .then((res) => {\r\n    \r\n            if(res.status === 200) {\r\n                toast.info('Rejected!', {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 3000);\r\n\r\n            } else {\r\n                toast.warning('Error!', {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });  \r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });          \r\n    }\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div className=\"cmpPI\">\r\n    \r\n                <div className=\"cpi-wrapper\">\r\n\r\n                    { !this.state.apiData ? (\r\n                        \r\n                        this.state.isEmpty ? (\r\n                            \r\n                            <div className=\"cpi-empty\">\r\n                                <p>No Pending Invites!</p>\r\n                            </div>\r\n                        ): (\r\n                            <div className=\"cpi-loading\">\r\n                                <p>Loading...</p>\r\n                            </div>\r\n                        )\r\n\r\n                    ):( this.state.apiData.map(zdata => (\r\n\r\n                        <div className=\"cpi-box\">\r\n                    \r\n                            <div className=\"cpi-box-item1\">\r\n                                <div className=\"cpi-box-item1-wrapper\">\r\n                                    <p className=\"cpiY\">Project Name: {JSON.parse(JSON.stringify(zdata.projectName))}</p>\r\n                                    <p className=\"cpiY qw\">Invited By: {JSON.parse(JSON.stringify(zdata.teamlead))}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"cpi-box-item2\">\r\n                                <div><input value=\"Accept\" type=\"submit\" className=\"cpi-acceptBtn\" onClick={ () => this.acceptfn(zdata._id) }></input></div>\r\n                            </div>\r\n                            <div className=\"cpi-box-item3\">\r\n                                <div><input value=\"Reject\" type=\"submit\" className=\"cpi-rejectBtn\" onClick={ () => this.rejectfn(zdata._id) }></input></div>\r\n                            </div>\r\n                        </div>\r\n                    )))}             \r\n    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}    ","F:\\projects\\zod-frontend\\zod\\src\\components\\Chat\\DynamicChatDisplay.js",["138","139","140","141","142","143","144","145"],"import emojiIcon from '../../assets/emoji_icon.svg';\r\nimport attachIcon from '../../assets/attachment_icon.svg';\r\nimport sendIcon from '../../assets/send_msg_icon.svg';\r\nimport ChatSVG from '../../assets/Chat-Home.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './DynamicChatDisplay.css';\r\nimport { useState, useEffect } from 'react';\r\nimport Loader from '../Loader/Loader';\r\n\r\nfunction DynamicChatDisplay(props) {\r\n    let [channelMembers, setChannelMembers] = useState([]);\r\n    let projectDetails = JSON.parse(localStorage.getItem('pdata'));\r\n    function displayDropDown () {\r\n        let displayValue = document.getElementById(\"dcd-more-options\").style.display;\r\n        if(displayValue == \"none\") {\r\n            document.getElementById(\"dcd-more-options\").style.display = \"block\";\r\n        }\r\n        else {\r\n            document.getElementById(\"dcd-more-options\").style.display = \"none\";\r\n        }    \r\n    }\r\n    function fetchMembers() {\r\n        let channelId = props.channelId;\r\n        setChannelMembers([]);\r\n        let url = \"https://zode-chat-service-test.herokuapp.com/api/channel/\" + projectDetails.projectID + \"/\" + channelId + \"/members\";\r\n        axios.get(url, {headers: {\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\": localStorage.getItem(\"token\")\r\n        }}).then(response => {\r\n            setChannelMembers(response.data);\r\n        })\r\n        let displayValue = document.getElementById(\"dcd-members-list\").style.display;\r\n        if(displayValue == \"none\") {\r\n            document.getElementById(\"dcd-members-list\").style.display = \"block\";\r\n        }\r\n        else {\r\n            document.getElementById(\"dcd-members-list\").style.display = \"none\";\r\n        }\r\n    }\r\n    if(props.channelname != 'default') {\r\n        return(\r\n        <div className=\"dcd-display\">\r\n        <div className=\"dcd-wrapper\">\r\n            <div className=\"dcd-header\">\r\n                <h3>{props.projectname} / {props.channelname}</h3>\r\n                <div className=\"dcd-icon-tray\">\r\n                    <div className=\"dcd-add-icon\" onClick={fetchMembers.bind(this)}></div>\r\n                    <div className=\"dcd-video-call-icon\"></div>\r\n                    <div className=\"dcd-more-options-icon\" onClick={displayDropDown}></div>\r\n                </div>\r\n                <div className=\"dcd-more-options\" id=\"dcd-more-options\">\r\n                    <p>Edit Channel</p>\r\n                    <p>Leave Channel</p>\r\n                    <p>Delete Channel</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"dcd-members-list-wrapper\" id=\"dcd-members-list\" style={{display: \"none\"}}>\r\n            <h3>Members</h3>\r\n            {channelMembers.length == 0 && <Loader/>}\r\n            {channelMembers.map((member, index) => \r\n            <div className=\"dcd-member\">\r\n                    <span>{member.name}</span>\r\n                    <button>Remove</button>\r\n            </div>\r\n            )}    \r\n        </div>\r\n        <div className=\"dcd-textbox\">\r\n            <textarea></textarea>\r\n            <div className=\"dcd-icon-chat-tray\">\r\n                <img className=\"dcd-emoji-icon\" src={emojiIcon}></img>\r\n                <img className=\"dcd-attach-icon\" src={attachIcon}></img>\r\n            </div>\r\n            <img className=\"dcd-send-icon\" src={sendIcon}></img>\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n        <div className=\"ch-default-display\">\r\n                <img src={ChatSVG} alt=\"Chat SVG\" className=\"ch-chat-svg\"></img>\r\n                <div className=\"ch-chat-instrns\">\r\n                    <span>Click on a channel or personal chat to begin a conversation.</span>\r\n                    <span>No channels created? Click <Link to=\"/chat/createChannel\">here</Link> to create one.</span>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DynamicChatDisplay;","F:\\projects\\zod-frontend\\zod\\src\\functions\\refreshToken.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Board\\CreatePersonalBoard.js",["146","147"],"import './CreatePersonalBoard.css';\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n \r\n/* \r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nexport default class CreatePersonalBoard extends React.Component {\r\n\r\n    constructor() {\r\n     \r\n        super();\r\n        this.state = {\r\n            bname: '',\r\n            members: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    updateBname = (evt) => {\r\n        this.setState({\r\n            bname: evt.target.value\r\n        });\r\n    } \r\n\r\n    submitFn = () => {\r\n\r\n        const tokenx = localStorage.getItem('token');\r\n        const xobj = JSON.parse(localStorage.getItem('pdata')); \r\n\r\n        const config = {\r\n            headers: {\r\n                'Authorization': tokenx,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin' : '*',\r\n            }\r\n        }\r\n    \r\n        const reqBody = {\r\n            \"boardName\": this.state.bname,\r\n            \"members\": [],\r\n            \"type\": \"private\",\r\n            \"projectName\": xobj.projectName,\r\n            \"projectId\": xobj.projectID\r\n        }\r\n\r\n        let url = 'https://boardservice-zode.herokuapp.com/api/board/new';\r\n\r\n        axios.post(url, reqBody, config)\r\n        .then((res) => {\r\n    \r\n            if(res.status === 201) {\r\n                \r\n                console.log(JSON.stringify(res.data))\r\n                toast.info('Personal Board Created!', {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                setTimeout(() => {\r\n                    window.location.href = window.location.protocol + '//' + window.location.host + '/projectdashboard/board/bhome';\r\n                  }, 3000);\r\n                \r\n            } else {\r\n\r\n                toast.error('Some Error Occured!', {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });          \r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        }); \r\n    }\r\n\r\n    backToBaseFn = () => {\r\n        //localStorage.setItem('pdata');\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/basedashboard/home';       \r\n    }\r\n\r\n    logout = () => {\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/login';   \r\n    }\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <div className=\"CreateBoard\">\r\n                \r\n                <div className=\"personal-cb-top-nav\">\r\n\r\n                    <div className=\"personal-cb-left-wrapper\">\r\n                        <div className=\"personal-cb-lt\" onClick={ this.backToBaseFn }>\r\n                            <div className=\"personal-cb-arrow\"></div>\r\n                            <div><p className=\"personal-cb-lt-txt\">Back to Base Dashboard</p></div>\r\n                        </div>\r\n                        <div className=\"personal-cb-lb\"><p className=\"b-title\">zode</p></div>\r\n                    </div>\r\n    \r\n                    <div className=\"personal-cb-mid-wrapper\">\r\n                        <p>PROJECT&nbsp;&nbsp;DASHBOARD</p>\r\n                    </div>\r\n    \r\n                    <div className=\"personal-cb-right-wrapper\">\r\n                        <input type=\"submit\" value=\"Logout\" className=\"personal-cb-logout-btn\" onClick = { this.logout }></input>\r\n                    </div>\r\n    \r\n                </div>\r\n\r\n                <div className=\"personal-cb-body-wrapper\">\r\n\r\n                    <div className=\"personal-cb-left-nav\">\r\n                        \r\n                        <div className=\"personal-cb-left-nav-grid\">\r\n                            \r\n                            <Link to=\"/projectdashboard/home\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"personal-cb-lng1-wrapper\">\r\n                                    <div className=\"personal-cb-lng1\" data-tip data-for=\"homeTip\"></div>\r\n                                </div>\r\n                            </Link> \r\n\r\n                            <Link to=\"/projectdashboard/board/bhome\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"personal-cb-lng2\" data-tip data-for=\"boardTip\">\r\n                                </div>\r\n                            </Link>\r\n\r\n                            <Link to=\"/chat/createChannel\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"personal-cb-lng3\" data-tip data-for=\"chatTip\">\r\n                                </div>\r\n                            </Link>               \r\n\r\n                            <div className=\"personal-cb-lng4\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"personal-cb-lng5\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"personal-cb-lng6\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"personal-cb-lng7\" data-tip data-for=\"calTip\"></div>\r\n\r\n                            <ReactTooltip id=\"homeTip\" place=\"right\" effect=\"float\" type=\"dark\">Home</ReactTooltip> \r\n                            <ReactTooltip id=\"boardTip\" place=\"right\" effect=\"float\" type=\"dark\">Board</ReactTooltip>\r\n                            <ReactTooltip id=\"chatTip\" place=\"right\" effect=\"float\" type=\"dark\">Chat</ReactTooltip> \r\n                            <ReactTooltip id=\"calTip\" place=\"right\" effect=\"float\" type=\"dark\">Calender</ReactTooltip>\r\n                                                         \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"personal-cb-body\">\r\n\r\n                        <div className=\"pcb-proname\">\r\n                            <p>Create Personal Board</p>\r\n                        </div>\r\n\r\n                        <div className=\"pcb-proLine\"></div>\r\n\r\n                        <div className=\"pcb-gridWrx\">\r\n                            \r\n                            <div className=\"pcb-g1\">\r\n                                \r\n                                <p className=\"pcb-g1-bname-label\">Board Name</p>\r\n                                <div><input type=\"text\" placeholder=\"\" className=\"pcb-g1-bname-inp\" value = { this.state.bname } onChange={ this.updateBname } ></input></div>\r\n                                \r\n                                <div><input type=\"submit\" value=\"Create\" className=\"pcb-g1-submit\" onClick = { this.submitFn } ></input></div>                                                                             \r\n                            </div>\r\n\r\n                            <div className=\"pcb-g2\">\r\n                                <div className=\"pcb-pic\"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","F:\\projects\\zod-frontend\\zod\\src\\components\\Board\\CreatePublicBoard.js",["148","149","150"],"F:\\projects\\zod-frontend\\zod\\src\\components\\Loader\\Loader.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":10,"column":5,"nodeType":"161","endLine":10,"endColumn":20,"suggestions":"162"},{"ruleId":"155","severity":1,"message":"163","line":64,"column":13,"nodeType":"157","messageId":"158","endLine":64,"endColumn":22},{"ruleId":"155","severity":1,"message":"164","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":22,"column":18,"nodeType":"167","messageId":"168","endLine":22,"endColumn":20},{"ruleId":"165","severity":1,"message":"169","line":36,"column":31,"nodeType":"167","messageId":"168","endLine":36,"endColumn":33},{"ruleId":"155","severity":1,"message":"164","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":21},{"ruleId":"155","severity":1,"message":"170","line":51,"column":29,"nodeType":"157","messageId":"158","endLine":51,"endColumn":34},{"ruleId":"165","severity":1,"message":"166","line":53,"column":35,"nodeType":"167","messageId":"168","endLine":53,"endColumn":37},{"ruleId":"155","severity":1,"message":"164","line":1,"column":16,"nodeType":"157","messageId":"158","endLine":1,"endColumn":21},{"ruleId":"155","severity":1,"message":"171","line":20,"column":10,"nodeType":"157","messageId":"158","endLine":20,"endColumn":24},{"ruleId":"155","severity":1,"message":"172","line":20,"column":26,"nodeType":"157","messageId":"158","endLine":20,"endColumn":43},{"ruleId":"159","severity":1,"message":"173","line":32,"column":10,"nodeType":"174","endLine":32,"endColumn":12,"suggestions":"175"},{"ruleId":"165","severity":1,"message":"169","line":55,"column":63,"nodeType":"167","messageId":"168","endLine":55,"endColumn":65},{"ruleId":"165","severity":1,"message":"166","line":113,"column":34,"nodeType":"167","messageId":"168","endLine":113,"endColumn":36},{"ruleId":"165","severity":1,"message":"169","line":114,"column":34,"nodeType":"167","messageId":"168","endLine":114,"endColumn":36},{"ruleId":"155","severity":1,"message":"164","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":21},{"ruleId":"155","severity":1,"message":"176","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":4,"column":17,"nodeType":"157","messageId":"158","endLine":4,"endColumn":26},{"ruleId":"165","severity":1,"message":"166","line":129,"column":35,"nodeType":"167","messageId":"168","endLine":129,"endColumn":37},{"ruleId":"165","severity":1,"message":"166","line":129,"column":69,"nodeType":"167","messageId":"168","endLine":129,"endColumn":71},{"ruleId":"165","severity":1,"message":"166","line":182,"column":42,"nodeType":"167","messageId":"168","endLine":182,"endColumn":44},{"ruleId":"165","severity":1,"message":"166","line":233,"column":42,"nodeType":"167","messageId":"168","endLine":233,"endColumn":44},{"ruleId":"165","severity":1,"message":"166","line":292,"column":14,"nodeType":"167","messageId":"168","endLine":292,"endColumn":16},{"ruleId":"155","severity":1,"message":"176","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":14},{"ruleId":"155","severity":1,"message":"177","line":5,"column":10,"nodeType":"157","messageId":"158","endLine":5,"endColumn":24},{"ruleId":"155","severity":1,"message":"156","line":8,"column":20,"nodeType":"157","messageId":"158","endLine":8,"endColumn":29},{"ruleId":"165","severity":1,"message":"166","line":16,"column":25,"nodeType":"167","messageId":"168","endLine":16,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":34,"column":25,"nodeType":"167","messageId":"168","endLine":34,"endColumn":27},{"ruleId":"165","severity":1,"message":"169","line":41,"column":26,"nodeType":"167","messageId":"168","endLine":41,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":61,"column":36,"nodeType":"167","messageId":"168","endLine":61,"endColumn":38},{"ruleId":"178","severity":1,"message":"179","line":72,"column":17,"nodeType":"180","endLine":72,"endColumn":65},{"ruleId":"178","severity":1,"message":"179","line":73,"column":17,"nodeType":"180","endLine":73,"endColumn":67},{"ruleId":"178","severity":1,"message":"179","line":75,"column":13,"nodeType":"180","endLine":75,"endColumn":59},{"ruleId":"155","severity":1,"message":"164","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":21},{"ruleId":"155","severity":1,"message":"177","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":24},{"ruleId":"155","severity":1,"message":"164","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":21},{"ruleId":"155","severity":1,"message":"177","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":24},{"ruleId":"155","severity":1,"message":"181","line":6,"column":26,"nodeType":"157","messageId":"158","endLine":6,"endColumn":31},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDisabled'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [seconds] as a second argument to the useEffect Hook.","MemberExpression",["184"],"'errorCode' is assigned a value but never used.","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'index' is assigned a value but never used.","'channelMembers' is assigned a value but never used.","'setChannelMembers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'response'. Either include it or remove the dependency array.","ArrayExpression",["185"],"'Link' is defined but never used.","'ToastContainer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toast' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Add dependencies array: [seconds]",{"range":"190","text":"191"},"Update the dependencies array to be: [response]",{"range":"192","text":"193"},[761,761],", [seconds]",[1224,1226],"[response]"]