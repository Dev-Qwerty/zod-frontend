[{"F:\\projects\\zod-frontend\\zod\\src\\index.js":"1","F:\\projects\\zod-frontend\\zod\\src\\reportWebVitals.js":"2","F:\\projects\\zod-frontend\\zod\\src\\App.js":"3","F:\\projects\\zod-frontend\\zod\\src\\components\\SignUp\\SignUp.js":"4","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\Profile\\Profile-MyProfile.js":"5","F:\\projects\\zod-frontend\\zod\\src\\components\\ConfirmEmail\\ConfirmEmail.js":"6","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\CreateProject\\CreateProject.js":"7","F:\\projects\\zod-frontend\\zod\\src\\components\\Login\\Login.js":"8","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\PendingInvites\\PendingInvites-MyProfile.js":"9","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\Base.js":"10","F:\\projects\\zod-frontend\\zod\\src\\components\\Home\\Home.js":"11","F:\\projects\\zod-frontend\\zod\\src\\components\\Board\\BCard.js":"12","F:\\projects\\zod-frontend\\zod\\src\\components\\Chat\\CreateChannel.js":"13","F:\\projects\\zod-frontend\\zod\\src\\components\\Board\\Board.js":"14","F:\\projects\\zod-frontend\\zod\\src\\components\\ResetPassword\\ResetPassword.js":"15","F:\\projects\\zod-frontend\\zod\\src\\components\\Chat\\ChatHome.js":"16","F:\\projects\\zod-frontend\\zod\\src\\components\\ProjectDashboard\\ProjectD.js":"17","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\Profile\\CmpProfile.js":"18","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\PendingInvites\\CmpPending.js":"19","F:\\projects\\zod-frontend\\zod\\src\\components\\Chat\\DynamicChatDisplay.js":"20","F:\\projects\\zod-frontend\\zod\\src\\functions\\refreshToken.js":"21"},{"size":615,"mtime":1617953408806,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1617953408806,"results":"24","hashOfConfig":"23"},{"size":2712,"mtime":1621494447517,"results":"25","hashOfConfig":"23"},{"size":5388,"mtime":1619846161695,"results":"26","hashOfConfig":"23"},{"size":2143,"mtime":1619457566225,"results":"27","hashOfConfig":"23"},{"size":2331,"mtime":1619846161692,"results":"28","hashOfConfig":"23"},{"size":7866,"mtime":1620312862954,"results":"29","hashOfConfig":"23"},{"size":3962,"mtime":1619846161694,"results":"30","hashOfConfig":"23"},{"size":2142,"mtime":1619457578728,"results":"31","hashOfConfig":"23"},{"size":6859,"mtime":1620139862086,"results":"32","hashOfConfig":"23"},{"size":5665,"mtime":1621056780509,"results":"33","hashOfConfig":"23"},{"size":10672,"mtime":1621505839702,"results":"34","hashOfConfig":"23"},{"size":6331,"mtime":1620282974774,"results":"35","hashOfConfig":"23"},{"size":7205,"mtime":1621508440943,"results":"36","hashOfConfig":"23"},{"size":1391,"mtime":1618462804183,"results":"37","hashOfConfig":"23"},{"size":4415,"mtime":1621494072797,"results":"38","hashOfConfig":"23"},{"size":8622,"mtime":1621494073017,"results":"39","hashOfConfig":"23"},{"size":10224,"mtime":1620140127937,"results":"40","hashOfConfig":"23"},{"size":7323,"mtime":1620139652598,"results":"41","hashOfConfig":"23"},{"size":2758,"mtime":1621494072799,"results":"42","hashOfConfig":"23"},{"size":573,"mtime":1621494072882,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"9zxbb8",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\projects\\zod-frontend\\zod\\src\\index.js",[],["99","100"],"F:\\projects\\zod-frontend\\zod\\src\\reportWebVitals.js",[],"F:\\projects\\zod-frontend\\zod\\src\\App.js",["101"],"import './App.css';\r\nimport LoginPage from './components/Login/Login';\r\nimport HomePage from './components/Home/Home';\r\nimport SignUpPage from './components/SignUp/SignUp';\r\nimport Base from './components/BaseDashboard/Base';\r\nimport CreateProject from './components/BaseDashboard/CreateProject/CreateProject';\r\nimport MyProfileP from './components/BaseDashboard/Profile/Profile-MyProfile';\r\nimport MyProfilePI from './components/BaseDashboard/PendingInvites/PendingInvites-MyProfile';\r\nimport ConfirmEmail from './components/ConfirmEmail/ConfirmEmail';\r\nimport ResetPassword from './components/ResetPassword/ResetPassword';\r\nimport ChatHome from './components/Chat/ChatHome';\r\nimport CreateChannel from './components/Chat/CreateChannel';\r\nimport firebase from 'firebase';\r\nimport ProjectD from './components/ProjectDashboard/ProjectD';\r\nimport Board from './components/Board/Board';\r\nimport BCard from './components/Board/BCard';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from \"react-router-dom\";\r\nrequire('dotenv').config()\r\n\r\nfirebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: \"zode-project.firebaseapp.com\",\r\n  projectId: \"zode-project\",\r\n  storageBucket: \"zode-project.appspot.com\",\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MSG_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Route exact path=\"/\">\r\n          <HomePage />\r\n        </Route>\r\n        <Route path = \"/login\">\r\n          <LoginPage/>\r\n        </Route>\r\n        <Route path = \"/signup\">\r\n          <SignUpPage/>\r\n        </Route>\r\n        <Route path = \"/confirmEmail\">\r\n          <ConfirmEmail/>\r\n        </Route>\r\n        <Route path = \"/resetPassword\">\r\n          <ResetPassword/>\r\n        </Route>\r\n        <Route path = \"/basedashboard/home\">\r\n          <Base/>\r\n        </Route>\r\n        <Route path=\"/basedashboard/createproject\">\r\n          <CreateProject/>\r\n        </Route>\r\n        <Route path=\"/basedashboard/myprofile/profile\">\r\n          <MyProfileP/>\r\n        </Route>   \r\n        <Route path=\"/basedashboard/myprofile/pendinginvites\">\r\n          <MyProfilePI />  \r\n        </Route>\r\n        <Route path=\"/projectdashboard/home\">\r\n          <ProjectD />  \r\n        </Route> \r\n        <Route path=\"/projectdashboard/board/bhome\">\r\n          <Board />  \r\n        </Route>        \r\n        <Route path=\"/projectdashboard/board/card\">\r\n          <BCard />  \r\n        </Route>                  \r\n        <Route path=\"/chat/createChannel\">\r\n          <CreateChannel />\r\n        </Route>                                \r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\projects\\zod-frontend\\zod\\src\\components\\SignUp\\SignUp.js",["102"],"import React, { useEffect } from 'react';\r\nimport './SignUp.css';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Button from 'react-bootstrap-button-loader';\r\nimport {toast} from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css'; \r\n\r\ntoast.configure()\r\n\r\nconst { useState } = React;\r\n\r\nfunction SignUpPage() {    \r\n    const [fname, setfNameValue] = useState('');\r\n    const [lname, setlNameValue] = useState('');\r\n    const [email, setemailValue] = useState('');\r\n    const [password, setPasswordValue] = useState('');\r\n    const [cpassword, setCPasswordValue] = useState('');\r\n    const [loading, setLoader] = useState(false);\r\n    const [btnText, setBtnText] = useState('Sign Up');\r\n\r\n    const handlefNameChange = (e) => setfNameValue(e.target.value);\r\n    const handlelNameChange = (e) => setlNameValue(e.target.value);\r\n    const handleEmailChange = (e) => setemailValue(e.target.value);\r\n    const handlepasswordChange = (e) => setPasswordValue(e.target.value);\r\n    const handleCPasswordChange = (e) => setCPasswordValue(e.target.value);\r\n    return (\r\n        <div className=\"SignUpPage\">\r\n            <span className=\"zod-title\">zode</span>\r\n            <p className=\"zod-tagline\">Collaboration platform for software development teams</p>\r\n                <div className=\"card zod-signupcard\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Create a new account</h5>\r\n                        <div className=\"zod-signup-inputs\">\r\n                            <div className=\"input-group\"> \r\n                                <input type=\"text\" className=\"form-control input-sm zod-name-grp\" placeholder=\"First Name\" value={fname} onChange={handlefNameChange}/> \r\n                                <span className=\"input-group-btn\"></span> \r\n                                <input type=\"text\" className=\"form-control input-sm zod-name-grp\" placeholder=\"Last Name\" value={lname} onChange={handlelNameChange}/> \r\n                            </div> \r\n                            <input type=\"text\" placeholder=\"Email\" className=\"zod-signup-grp form-control\" value={email} onChange={handleEmailChange}></input>\r\n                            <input type=\"password\" placeholder=\"Password\" className=\"zod-signup-grp form-control\" value={password} onChange={handlepasswordChange}></input>\r\n                            <input type=\"password\" placeholder=\"Confirm Password\" className=\"zod-signup-grp form-control\" value={cpassword} onChange={handleCPasswordChange}></input>\r\n                            <Button variant=\"success\" loading={loading} className=\"zod-signup-btn zod-signup-grp\" onClick={SignUpRequest.bind(this, fname, lname, email, password, cpassword, setLoader, setBtnText)}>{btnText}</Button>\r\n                            <hr/>\r\n                            <button type=\"submit\" className=\"zod-google-btn-1\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"Google Logo\"></img>Sign up with Google</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <span className=\"zod-signuptxt\">Already have an account? <Link to=\"/login\" style={{ textDecoration: 'none', color: '#000', fontWeight: 'bold' }}>Login</Link></span>\r\n            <footer className=\"zod-footer\">\r\n                <ul>\r\n                    <li>Privacy & Terms</li>\r\n                    <li>Contact Us</li>\r\n                </ul>\r\n            </footer>\r\n        </div>\r\n        );\r\n}\r\n\r\nasync function SignUpRequest(fname, lname, email, password, cpassword, setLoader, setBtnText) {\r\n    setBtnText('Signing Up...');\r\n    setLoader(true);\r\n    if(fname === '' || lname === '' || email === '' || password === '') {\r\n        toast.warning('Please enter all fields!', {position: toast.POSITION.BOTTOM_LEFT});\r\n        setBtnText('Sign Up');\r\n        setLoader(false);\r\n        return;\r\n    }\r\n    else if(password !== cpassword) {\r\n        toast.error('Passwords not matching!', {position: toast.POSITION.BOTTOM_LEFT});\r\n        setBtnText('Sign Up');\r\n        setLoader(false);\r\n        return;\r\n    }\r\n    else {\r\n    const reqBody = {\r\n        \"fname\": fname,\r\n        \"lname\": lname,\r\n        \"email\": email, \r\n        \"password\": password\r\n    }\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin' : '*'\r\n        }\r\n    }\r\n    axios.post('https://userservice-zode.herokuapp.com/api/user/signup', reqBody, config).then((response) => {\r\n        if(response.status === 201) {\r\n            localStorage.setItem(\"email\", email);\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/confirmEmail';\r\n        }\r\n    }).finally(()=> {\r\n        setLoader(false);\r\n        setBtnText('Sign Up');\r\n    }).catch(error => {\r\n        if(error.response.data.error === 'user with the provided email already exists') {\r\n            toast.warning(\"Account with the given email already exists!\", {position: toast.POSITION.BOTTOM_LEFT});\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/login';\r\n        }\r\n        else {\r\n            toast.error(error.response.data.error, {position: toast.POSITION.BOTTOM_LEFT});\r\n        }\r\n    })\r\n    }\r\n}\r\n\r\nexport default SignUpPage;","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\Profile\\Profile-MyProfile.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\ConfirmEmail\\ConfirmEmail.js",["103"],"import './ConfirmEmail.css';\r\nimport sendMsgSVG from '../../assets/send-message.svg';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ConfirmEmail() {\r\n    const [seconds, setSeconds] = React.useState(30);\r\n    let [isDisabled, setDisabled] = React.useState(false);\r\n    var btn = document.getElementById('resend-btn');\r\n    React.useEffect(() => {\r\n        if (seconds > 0) {\r\n            setDisabled(true);\r\n            setTimeout(() => setSeconds(seconds - 1), 1000);\r\n        } else {\r\n            setDisabled(false);  \r\n            setSeconds(0);\r\n        }\r\n\r\n        const cleanup = () => {\r\n            localStorage.removeItem(\"email\");\r\n        }\r\n        \r\n        window.addEventListener('beforeunload', cleanup);\r\n        \r\n    });\r\n\r\n    async function handleBtnClicked() {\r\n        const reqBody = {\r\n            \"email\": localStorage.getItem(\"email\"), \r\n        }\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }\r\n        axios.post('https://userservice-zode.herokuapp.com/api/user/resendverificationemail', reqBody, config).then((response) => {\r\n            if(response.status === 200) {\r\n                alert(\"Verification Email sent to your mail. Please check.\");\r\n            }\r\n        })\r\n        \r\n        btn.setAttribute(\"disabled\",\"\");\r\n        setSeconds(30);\r\n        setTimeout(()=> {\r\n            document.getElementById('resend-btn').removeAttribute('disabled');\r\n        }, 30000);\r\n    }\r\n    return(\r\n        <div className=\"ConfirmEmailPage\">\r\n            <span className=\"zod-ctitle\">zode</span>\r\n            <div className=\"sendMsg-svg\">\r\n                <img src={sendMsgSVG} alt=\"send email svg\" className=\"send-svg\"></img>\r\n            </div>\r\n            <div className=\"zod-cheading\">\r\n                <h1>You're almost there!</h1>\r\n                <p>We have sent a verificaton email to {localStorage.getItem(\"email\")}.<br></br>Please click the link to verify your account.</p>\r\n            </div>\r\n            <div className=\"zod-mail-timer\">\r\n                <p>Didn't receive the mail? <button id=\"resend-btn\" disabled={isDisabled} onClick={handleBtnClicked.bind()}>Resend</button> in {seconds} seconds.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmEmail;","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\CreateProject\\CreateProject.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Login\\Login.js",["104"],"import './Login.css';\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nimport React from 'react';\r\nimport Button from 'react-bootstrap-button-loader';\r\nimport {toast} from 'react-toastify'; \r\n\r\ntoast.configure()\r\n\r\nconst { useState } = React;\r\nfunction LoginPage() {\r\n    const [email, setemailValue] = useState('');\r\n    const [password, setPasswordValue] = useState('');\r\n    const [loading, setLoader] = useState(false);\r\n    const [btnText, setBtnText] = useState('Login');\r\n    \r\n    const handleEmailChange = (e) => setemailValue(e.target.value);\r\n    const handlepasswordChange = (e) => setPasswordValue(e.target.value);\r\n    return (\r\n        <div className=\"LoginPage\">\r\n            <span className=\"zod-title\">zode</span>\r\n            <p className=\"zod-tagline\">Collaboration platform for software development teams</p>\r\n                <div className=\"card zod-logincard\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Login to your account</h5>\r\n                        <div className=\"zod-login-inputs\">\r\n                            <input type=\"text\" placeholder=\"Enter email\" className=\"zod-login-grp form-control\" value={email} onChange={handleEmailChange}></input>\r\n                            <input type=\"password\" placeholder=\"Enter password\" className=\"zod-login-grp form-control\" value={password} onChange={handlepasswordChange}></input>\r\n                            <Button variant=\"success\" loading={loading} className=\"zod-login-btn zod-login-grp\" onClick={LoginRequest.bind(this, email, password, setLoader, setBtnText)}>{btnText}</Button>\r\n                            <hr/>\r\n                            <button type=\"submit\" className=\"zod-google-btn\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"Google Logo\"></img>Login with Google</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <span className=\"zod-logintxt\">Don't have an account? <Link to=\"/signup\" style={{ textDecoration: 'none', color: '#000', fontWeight: 'bold' }}>Sign Up</Link></span>\r\n            <footer>\r\n                <ul>\r\n                    <li>Privacy & Terms</li>\r\n                    <li>Contact Us</li>\r\n                </ul>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LoginRequest(email, password, setLoader, setBtnText) {\r\n    setLoader(true);\r\n    setBtnText('Logging in...');\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n        // Signed in\r\n        var user = userCredential.user;\r\n        if(user.emailVerified) {\r\n            localStorage.setItem('token', user.za);\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/basedashboard/home';\r\n        }\r\n        else {\r\n            localStorage.setItem('email', email);\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/confirmEmail';\r\n        }\r\n        \r\n    })\r\n    .catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        setBtnText(\"Sign In\");\r\n        setLoader(false);\r\n        if(errorMessage === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n            toast.info(\"No account exists with given email. Please sign up!\", {position: toast.POSITION.BOTTOM_LEFT});\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/signup'; \r\n        }\r\n        else if(errorMessage === \"The password is invalid or the user does not have a password.\") {\r\n            toast.error(\"Invalid email or password! Please check.\", {position: toast.POSITION.BOTTOM_LEFT});\r\n        }\r\n        else {\r\n            toast.error(errorMessage, {position: toast.POSITION.BOTTOM_LEFT})\r\n        }\r\n\r\n    });\r\n}\r\n\r\nexport default LoginPage;","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\PendingInvites\\PendingInvites-MyProfile.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\Base.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Home\\Home.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Board\\BCard.js",["105"],"import './BCard.css';\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Draggable from 'react-draggable';\r\n\r\n \r\n/* \r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nexport default class Card extends React.Component {\r\n\r\n    constructor() {\r\n     \r\n        super();\r\n        this.state = {\r\n            data: ''\r\n        }\r\n    }\r\n\r\n    backToBaseFn = () => {\r\n        //localStorage.setItem('pdata');\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/basedashboard/home';       \r\n    }\r\n\r\n    logout = () => {\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/login';   \r\n    }\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <div className=\"Card\">\r\n                \r\n                <div className=\"c-top-nav\">\r\n\r\n                    <div className=\"c-left-wrapper\">\r\n                        <div className=\"c-lt\" onClick={ this.backToBaseFn }>\r\n                            <div className=\"c-arrow\"></div>\r\n                            <div><p className=\"c-lt-txt\">Back to Base Dashboard</p></div>\r\n                        </div>\r\n                        <div className=\"c-lb\"><p className=\"b-title\">zode</p></div>\r\n                    </div>\r\n    \r\n                    <div className=\"c-mid-wrapper\">\r\n                        <p>PROJECT&nbsp;&nbsp;DASHBOARD</p>\r\n                    </div>\r\n    \r\n                    <div className=\"c-right-wrapper\">\r\n                        <input type=\"submit\" value=\"Logout\" className=\"c-logout-btn\" onClick = { this.logout }></input>\r\n                    </div>\r\n    \r\n                </div>\r\n\r\n                <div className=\"c-body-wrapper\">\r\n\r\n                    <div className=\"c-left-nav\">\r\n                        \r\n                        <div className=\"c-left-nav-grid\">\r\n                            \r\n                            <Link to=\"/projectdashboard/home\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"c-lng1-wrapper\">\r\n                                    <div className=\"c-lng1\" data-tip data-for=\"homeTip\"></div>\r\n                                </div>\r\n                            </Link> \r\n\r\n                            <Link to=\"/projectdashboard/board/bhome\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"c-lng2\" data-tip data-for=\"boardTip\">\r\n                                </div>\r\n                            </Link>\r\n\r\n                            <Link to=\"/chat/createChannel\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"c-lng3\" data-tip data-for=\"chatTip\">\r\n                                </div>\r\n                            </Link>               \r\n\r\n                            <div className=\"c-lng4\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"c-lng5\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"c-lng6\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"c-lng7\" data-tip data-for=\"calTip\"></div>\r\n\r\n                            <ReactTooltip id=\"homeTip\" place=\"right\" effect=\"float\" type=\"dark\">Home</ReactTooltip> \r\n                            <ReactTooltip id=\"boardTip\" place=\"right\" effect=\"float\" type=\"dark\">Board</ReactTooltip>\r\n                            <ReactTooltip id=\"chatTip\" place=\"right\" effect=\"float\" type=\"dark\">Chat</ReactTooltip> \r\n                            <ReactTooltip id=\"calTip\" place=\"right\" effect=\"float\" type=\"dark\">Calender</ReactTooltip>\r\n                                                         \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"c-body\">\r\n                        \r\n                        <div className=\"cb-wrapper\">\r\n\r\n                            <div className=\"\">\r\n                                <input type=\"submit\" value=\"New List\" className=\"cb-new-list-btn\"></input>\r\n                            </div>\r\n\r\n                            <div className=\"cb-list-wrapper\">\r\n                                \r\n                                <div className=\"cb-list\">\r\n                                   \r\n                                    <div className=\"cbl-h\">\r\n                                        <div className=\"cblh-wr\">\r\n                                            <div className=\"cblh-p\"><p>Upcomming</p></div>\r\n                                            <div className=\"cblh-plus\"></div>\r\n                                        </div>\r\n\r\n                                        <div className=\"cblh-line\"></div>\r\n                                    </div>\r\n\r\n                                    <Draggable>  \r\n                                        <div className=\"dragg\">\r\n                                            <div className=\"cbl-card\">\r\n                                                <div className=\"cblc-taskname\">\r\n                                                    <p>Task Name</p>\r\n                                                </div>\r\n                                                <div className=\"cblc-wr\">\r\n                                                    <div className=\"cblc-profile\"><p>JD</p></div>\r\n                                                    <div><p className=\"cblc-date\">20-5-2021</p></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Draggable>\r\n                                    \r\n                                    <div className=\"cbl-card\">\r\n                                        <div className=\"cblc-taskname\">\r\n                                            <p>Task Name</p>\r\n                                        </div>\r\n                                        <div className=\"cblc-wr\">\r\n                                            <div className=\"cblc-profile\"><p>JD</p></div>\r\n                                            <div><p className=\"cblc-date\">20-5-2021</p></div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"cbl-card\">\r\n                                        <div className=\"cblc-taskname\">\r\n                                            <p>Task Name</p>\r\n                                        </div>\r\n                                        <div className=\"cblc-wr\">\r\n                                            <div className=\"cblc-profile\"><p>JD</p></div>\r\n                                            <div><p className=\"cblc-date\">20-5-2021</p></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"cb-list\">\r\n\r\n                                   <div className=\"cbl-h\">\r\n                                        <div className=\"cblh-wr\">\r\n                                            <div className=\"cblh-p\"><p>In Progress</p></div>\r\n                                            <div className=\"cblh-plus\"></div>\r\n                                        </div>\r\n\r\n                                        <div className=\"cblh-line\"></div>\r\n                                    </div>\r\n\r\n                                    <div className=\"cbl-card\">\r\n                                        <div className=\"cblc-taskname\">\r\n                                            <p>Task Name</p>\r\n                                        </div>\r\n                                        <div className=\"cblc-wr\">\r\n                                            <div className=\"cblc-profile\"><p>JD</p></div>\r\n                                            <div><p className=\"cblc-date\">20-5-2021</p></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"cbl-card\">\r\n                                        <div className=\"cblc-taskname\">\r\n                                            <p>Task Name</p>\r\n                                        </div>\r\n                                        <div className=\"cblc-wr\">\r\n                                            <div className=\"cblc-profile\"><p>JD</p></div>\r\n                                            <div><p className=\"cblc-date\">20-5-2021</p></div>\r\n                                        </div>\r\n                                    </div>                                  \r\n                                </div>\r\n\r\n                                <div className=\"cb-list\">\r\n\r\n                                    <div className=\"cbl-h\">\r\n                                        <div className=\"cblh-wr\">\r\n                                            <div className=\"cblh-p\"><p>Completed</p></div>\r\n                                            <div className=\"cblh-plus\"></div>\r\n                                        </div>\r\n\r\n                                        <div className=\"cblh-line\"></div>\r\n                                    </div>\r\n\r\n                                    <div className=\"cbl-card\">\r\n                                        <div className=\"cblc-taskname\">\r\n                                            <p>Task Name</p>\r\n                                        </div>\r\n                                        <div className=\"cblc-wr\">\r\n                                            <div className=\"cblc-profile\"><p>JD</p></div>\r\n                                            <div><p className=\"cblc-date\">20-5-2021</p></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"cb-list\">\r\n\r\n                                    <div className=\"cbl-h\">\r\n                                        <div className=\"cblh-wr\">\r\n                                            <div className=\"cblh-p\"><p>Frontend</p></div>\r\n                                            <div className=\"cblh-plus\"></div>\r\n                                        </div>\r\n\r\n                                        <div className=\"cblh-line\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n    \r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","F:\\projects\\zod-frontend\\zod\\src\\components\\Chat\\CreateChannel.js",["106","107","108"],"import { Link } from \"react-router-dom\";\r\nimport './CreateChannel.css';\r\nimport ccSvg from '../../assets/channel.svg';\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { toast } from \"react-toastify\";\r\n\r\ntoast.configure()\r\n\r\nlet emails = [];\r\nfunction CreateChannel() {\r\n    const [channelName, setChannelName] = useState('');\r\n    const [members, setMembers] = useState([{name: \"\", email: \"\"}]);\r\n    const [allmembers, setAllMembers] = useState([{name: \"\", email: \"\"}]);\r\n    const [channelDesc, setDesc] = useState('');\r\n    const [disable, setDisable] = useState(false);\r\n\r\n    const handleChannelNameChange = (e) => setChannelName(e.target.value);\r\n    const handleDescChange = (e) => setDesc(e.target.value);\r\n\r\n    const optionClicked = (e, index) => {\r\n        if(index == emails.length) {\r\n            if(!emails.includes(e.target.value)) {\r\n                emails.push({email: e.target.value});\r\n            }\r\n        }\r\n        else if(index < emails.length) {\r\n            emails[index].email = e.target.value;\r\n        }\r\n    }\r\n\r\n    const handleRemoveBtn = index => {\r\n        const list = [...members];\r\n        list.splice(index, 1);\r\n        setMembers(list);\r\n        if(emails[index].email!=undefined) {\r\n            emails = emails.filter(function(item) {\r\n                return item.email !== emails[index].email\r\n            })\r\n        }        \r\n    };\r\n\r\n    const handleAddBtn = () => {\r\n        setMembers([...members, { name: \"\", email: \"\" }]);\r\n    };\r\n\r\n    const getMembers = () => {\r\n    setDisable(true);\r\n    let projectData = JSON.parse(localStorage.getItem(\"pdata\"));\r\n    let url = 'https://projectservice-zode.herokuapp.com/api/projects/' + projectData.projectID + '/members';\r\n    axios.get(url, {headers: {\r\n        \"Access-Control-Allow-Origin\" : \"*\",\r\n        \"Authorization\": localStorage.getItem(\"token\")\r\n    }}).then(response => {\r\n        setAllMembers(response.data.projectMembers);\r\n    })\r\n\r\n    setTimeout(()=> setDisable(false), 600000);\r\n    }\r\n\r\n    window.addEventListener('load', getMembers);\r\n\r\n    return (\r\n        <div className=\"zod-create-channel-page\">\r\n            <div className=\"bd-top-nav\">\r\n                <div className=\"bd-left-wrapper\">\r\n                    <p className=\"bd-title\">zode</p>\r\n                </div>\r\n    \r\n            <div className=\"bd-right-wrapper\">\r\n                <div className=\"bd-profile-icon-wrapper\">\r\n                    <div className=\"bd-icon-1\">\r\n                        <p className=\"bd-icon-txt\">JD</p> \r\n                    </div>\r\n    \r\n                    <div className=\"bd-dropdown-content-1\">\r\n                        <Link to=\"/basedashboard/myprofile/profile\" style={{ textDecoration: 'none' }}><p>My Profile</p></Link>\r\n                        <Link to=\"/basedashboard/myprofile/pendinginvites\" style={{ textDecoration: 'none' }}><p>Pending Invites</p></Link>\r\n                        <Link to=\"/login\" style={{ textDecoration: 'none' }}><p>Logout</p></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"cc-svg-1\">\r\n            <img src={ccSvg} alt=\"Create Channel SVG\" className=\"create-channel-svg\"></img>\r\n        </div>\r\n\r\n        <div className=\"cc-wrapper\">\r\n            <h1>Create Channel</h1>\r\n            <h3>Channel Name</h3>\r\n            <input type=\"text\" className=\"cc-name\" onChange={handleChannelNameChange}></input>\r\n            <h3>Description</h3>\r\n            <textarea className=\"cc-desc\" onChange={handleDescChange}></textarea>\r\n            <h3 className=\"cc-members-title\">Members</h3>\r\n            <button type=\"button\" className=\"cc-refresh-btn\" onClick={getMembers} disabled={disable}>\r\n                <span className=\"glyphicon glyphicon-refresh\"></span> Refresh\r\n            </button>\r\n            {members.map((x, i) => {\r\n                return (\r\n                    <div className=\"cpm-box\">\r\n                        <div className=\"cpm-one-row-wrapper\">\r\n                            <select name=\"members\" id={\"members\"} onChange={(e) => optionClicked(e, i)}>\r\n                            <option value=\"none\" selected disabled hidden> Select Members </option>\r\n                            {allmembers.map((members, index) => <option key={members.email} value={members.email} id={\"members\" + index}>{members.name} - {members.email}</option>)}\r\n                            </select>\r\n                            <span className=\"cpm-btn-box\">\r\n                                {members.length !== 1 && <button onClick={() => handleRemoveBtn(i)} className=\"cpm-remove-btn\">Remove</button>}\r\n                                {members.length - 1 === i && <button onClick={handleAddBtn} className=\"cpm-add-btn\">New</button>}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n        <button type=\"submit\" value=\"Submit\" className=\"cc-create-btn\" onClick={CreateChannelRequest.bind(this, channelName, channelDesc, emails)}>Create</button>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction CreateChannelRequest(name, desc, members) {\r\n    const projectData = JSON.parse(localStorage.getItem(\"pdata\"));\r\n    const projectID = projectData.projectID;\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': localStorage.getItem(\"token\")\r\n        }\r\n    }\r\n    axios.post('https://zode-chat-service-test.herokuapp.com/api/channel/new', {\r\n        channelName: name,\r\n        projectid: projectID,\r\n        description: desc,\r\n        members\r\n    }, config).then((response) => {\r\n        console.log(response);\r\n        if(response.status === 201) {\r\n            alert(\"Success!\");\r\n            toast.info('Channel Created!', {\r\n                position: \"bottom-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            setTimeout(() => {\r\n                window.location.href = window.location.protocol + '//' + window.location.host + '/projectdashboard/home';\r\n              }, 3500);\r\n        }\r\n    })\r\n}\r\n\r\nexport default CreateChannel;","F:\\projects\\zod-frontend\\zod\\src\\components\\Board\\Board.js",["109"],"import './Board.css';\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport ReactTooltip from \"react-tooltip\";\r\n \r\n/* \r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nexport default class Board extends React.Component {\r\n\r\n    constructor() {\r\n     \r\n        super();\r\n        this.state = {\r\n            data: ''\r\n        }\r\n    }\r\n\r\n    backToBaseFn = () => {\r\n        //localStorage.setItem('pdata');\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/basedashboard/home';       \r\n    }\r\n\r\n    logout = () => {\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/login';   \r\n    }\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <div className=\"Board\">\r\n                \r\n                <div className=\"b-top-nav\">\r\n\r\n                    <div className=\"b-left-wrapper\">\r\n                        <div className=\"b-lt\" onClick={ this.backToBaseFn }>\r\n                            <div className=\"b-arrow\"></div>\r\n                            <div><p className=\"b-lt-txt\">Back to Base Dashboard</p></div>\r\n                        </div>\r\n                        <div className=\"b-lb\"><p className=\"b-title\">zode</p></div>\r\n                    </div>\r\n    \r\n                    <div className=\"b-mid-wrapper\">\r\n                        <p>PROJECT&nbsp;&nbsp;DASHBOARD</p>\r\n                    </div>\r\n    \r\n                    <div className=\"b-right-wrapper\">\r\n                        <input type=\"submit\" value=\"Logout\" className=\"b-logout-btn\" onClick = { this.logout }></input>\r\n                    </div>\r\n    \r\n                </div>\r\n\r\n                <div className=\"b-body-wrapper\">\r\n\r\n                    <div className=\"b-left-nav\">\r\n                        \r\n                        <div className=\"b-left-nav-grid\">\r\n                            \r\n                            <Link to=\"/projectdashboard/home\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"b-lng1-wrapper\">\r\n                                    <div className=\"b-lng1\" data-tip data-for=\"homeTip\"></div>\r\n                                </div>\r\n                            </Link> \r\n\r\n                            <Link to=\"/projectdashboard/board/bhome\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"b-lng2\" data-tip data-for=\"boardTip\">\r\n                                </div>\r\n                            </Link>\r\n\r\n                            <Link to=\"/chat/createChannel\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"b-lng3\" data-tip data-for=\"chatTip\">\r\n                                </div>\r\n                            </Link>               \r\n\r\n                            <div className=\"b-lng4\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"b-lng5\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"b-lng6\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"b-lng7\" data-tip data-for=\"calTip\"></div>\r\n\r\n                            <ReactTooltip id=\"homeTip\" place=\"right\" effect=\"float\" type=\"dark\">Home</ReactTooltip> \r\n                            <ReactTooltip id=\"boardTip\" place=\"right\" effect=\"float\" type=\"dark\">Board</ReactTooltip>\r\n                            <ReactTooltip id=\"chatTip\" place=\"right\" effect=\"float\" type=\"dark\">Chat</ReactTooltip> \r\n                            <ReactTooltip id=\"calTip\" place=\"right\" effect=\"float\" type=\"dark\">Calender</ReactTooltip>\r\n                                                         \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"b-body\">\r\n                        \r\n                        <div className=\"bb-proname\">\r\n                            <p>Project Name</p>\r\n                        </div>\r\n                        <div className=\"bb-proLine\"></div>\r\n\r\n                        <div className=\"bb-wrapper\">\r\n                            \r\n                            <div className=\"bb-personalB\">\r\n\r\n                                <p className=\"bbPersonal-hdn\">Personal Boards</p>\r\n                                \r\n                                <div className=\"bbPersonal-card-wrapper\">\r\n                                    \r\n                                    <Link to=\"/projectdashboard/board/card\" style={{ textDecoration: 'none' }}>\r\n                                        <div className=\"bbPersonal-card\">\r\n                                            <p className=\"bbPersonal-parag\">Test Board</p>\r\n                                        </div>\r\n                                    </Link>    \r\n                                    \r\n                                    <div className=\"bbPersonal-card\">\r\n                                        <p className=\"bbPersonal-parag\">Test Board</p>\r\n                                    </div>   \r\n                                    \r\n                                    <div className=\"bbPersonal-special-card\">\r\n                                        <div className=\"bbPersonal-xy\">\r\n                                            <div className=\"bbPersonal-plus\"></div>\r\n                                            <div><p className=\"bbPersonal-new-parag\">New Board</p></div>\r\n                                        </div>\r\n                                    </div>                                                               \r\n                                \r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"bb-publicB\">\r\n                                \r\n                                <p className=\"bbPublic-hdn\">Public Boards</p>\r\n                                \r\n                                <div className=\"bbPublic-card-wrapper\">\r\n                                    \r\n                                    <div className=\"bbPublic-card\">\r\n                                        <p className=\"bbPublic-parag\">Test Board</p>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"bbPublic-card\">\r\n                                        <p className=\"bbPublic-parag\">Test Board</p>\r\n                                    </div>   \r\n                                    \r\n                                    <div className=\"bbPublic-special-card\">\r\n                                        <div className=\"bbPublic-xy\">\r\n                                            <div className=\"bbPublic-plus\"></div>\r\n                                            <div><p className=\"bbPublic-new-parag\">New Board</p></div>\r\n                                        </div>\r\n                                    </div>                                                               \r\n                                \r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","F:\\projects\\zod-frontend\\zod\\src\\components\\ResetPassword\\ResetPassword.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Chat\\ChatHome.js",["110"],"import { Link, Route } from 'react-router-dom';\r\nimport './ChatHome.css';\r\n\r\nimport DynamicChatDisplay from './DynamicChatDisplay';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport refreshToken from '../../functions/refreshToken';\r\nimport {toast} from 'react-toastify'; \r\n\r\ntoast.configure()\r\n\r\n\r\nfunction ChatHome() {\r\n    let [activeComponent, setActiveComponent] = useState('default'); \r\n    let [channelNames, setChannelName] = useState([]);\r\n    let projectDetails = JSON.parse(localStorage.getItem('pdata'));\r\n    function fetchChannels() {\r\n        let projectData = JSON.parse(localStorage.getItem(\"pdata\"));\r\n        let url = \"https://zode-chat-service-test.herokuapp.com/api/channel/\" + projectData.projectID;\r\n        axios.get(url, {headers: {\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\": localStorage.getItem(\"token\")\r\n        }}).then(response => {\r\n            setChannelName(response.data);\r\n        }).catch(error => {\r\n            if(error.response.status === 401) {\r\n                refreshToken();\r\n                toast.error(\"Session expired! Reloading....\", {position: \"bottom-right\"});\r\n                setTimeout(() => {\r\n                    window.location.href = window.location.protocol + '//' + window.location.host + '/chat/home';\r\n                }, 2500);\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        fetchChannels();\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"zod-chat-homepg\">\r\n        <div className=\"bd-top-nav\">\r\n                <div className=\"bd-left-wrapper\">\r\n                    <p className=\"bd-title\">zode</p>\r\n                </div>\r\n    \r\n            <div className=\"bd-right-wrapper\">\r\n                <div className=\"bd-profile-icon-wrapper\">\r\n                    <div className=\"bd-icon-1\">\r\n                        <p className=\"bd-icon-txt\">JD</p> \r\n                    </div>\r\n    \r\n                    <div className=\"bd-dropdown-content-1\">\r\n                        <Link to=\"/basedashboard/myprofile/profile\" style={{ textDecoration: 'none' }}><p>My Profile</p></Link>\r\n                        <Link to=\"/basedashboard/myprofile/pendinginvites\" style={{ textDecoration: 'none' }}><p>Pending Invites</p></Link>\r\n                        <Link to=\"/login\" style={{ textDecoration: 'none' }}><p>Logout</p></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"ch-left-nav\">\r\n                        \r\n            <div className=\"pd-left-nav-grid\">\r\n                <Link to=\"/projectdashboard/home\" style={{ textDecoration: 'none' }}>\r\n                    <div className=\"ch-lng1-wrapper\">\r\n                        <div className=\"ch-lng1\" data-tip data-for=\"homeTip\"></div>\r\n                    </div>\r\n                </Link> \r\n                <Link to=\"/projectdashboard/board\" style={{ textDecoration: 'none' }}>\r\n                    <div className=\"pd-lng2\" data-tip data-for=\"boardTip\"></div>\r\n                </Link>\r\n                <Link to=\"/chat/home\" style={{ textDecoration: 'none' }}><div className=\"ch-lng3\" data-tip data-for=\"chatTip\"></div></Link>\r\n                <div className=\"pd-lng4\"></div>\r\n                <div className=\"pd-lng5\"></div>\r\n                <div className=\"pd-lng6\"></div>\r\n                <div className=\"pd-lng7\"></div>\r\n                <ReactTooltip id=\"chatTip\" place=\"right\" effect=\"float\" type=\"dark\">Chat</ReactTooltip> \r\n                <ReactTooltip id=\"homeTip\" place=\"right\" effect=\"float\" type=\"dark\">Home</ReactTooltip> \r\n                <ReactTooltip id=\"boardTip\" place=\"right\" effect=\"float\" type=\"dark\">Board</ReactTooltip>            \r\n            </div>\r\n        </div>\r\n        <div className=\"ch-leftnav-2\">\r\n            <h2 className=\"ch-project-title\">{projectDetails.projectName}</h2>\r\n            <hr></hr>\r\n            <h3>Channels</h3>\r\n            <div className=\"ch-channels-list\">\r\n                {channelNames.map((channel, index) => <button onClick={() => {setActiveComponent(channel.channelName)}}>@{channel.channelName}</button>)}\r\n            </div>\r\n        </div>\r\n        <div className=\"ch-chat-display\">\r\n            <DynamicChatDisplay projectname={projectDetails.projectName} channelname={activeComponent}/>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ChatHome;","F:\\projects\\zod-frontend\\zod\\src\\components\\ProjectDashboard\\ProjectD.js",["111"],"import './ProjectD.css';\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport ReactTooltip from \"react-tooltip\";\r\n \r\n/* \r\n    HOME\r\n\r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nexport default class ProjectD extends React.Component {\r\n\r\n    constructor() {\r\n     \r\n        super();\r\n        this.state = {\r\n            data: ''\r\n        }\r\n    }\r\n\r\n    backToBaseFn = () => {\r\n        //localStorage.setItem('pdata');\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/basedashboard/home';       \r\n    }\r\n\r\n    logout = () => {\r\n        window.location.href = window.location.protocol + '//' + window.location.host + '/login';   \r\n    }\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <div className=\"ProjectD\">\r\n                \r\n                <div className=\"pd-top-nav\">\r\n\r\n                    <div className=\"pd-left-wrapper\">\r\n                        <div className=\"pd-lt\" onClick={ this.backToBaseFn }>\r\n                            <div className=\"pd-arrow\"></div>\r\n                            <div><p className=\"pd-lt-txt\">Back to Base Dashboard</p></div>\r\n                        </div>\r\n                        <div className=\"pd-lb\"><p className=\"pd-title\">zode</p></div>\r\n                    </div>\r\n    \r\n                    <div className=\"pd-mid-wrapper\">\r\n                        <p>PROJECT&nbsp;&nbsp;DASHBOARD</p>\r\n                    </div>\r\n    \r\n                    <div className=\"pd-right-wrapper\">\r\n                        <input type=\"submit\" value=\"Logout\" className=\"pd-logout-btn\" onClick = { this.logout }></input>\r\n                    </div>\r\n    \r\n                </div>\r\n\r\n                <div className=\"pd-body-wrapper\">\r\n\r\n                    <div className=\"pd-left-nav\">\r\n                        \r\n                        <div className=\"pd-left-nav-grid\">\r\n                            \r\n                            <Link to=\"/projectdashboard/home\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"pd-lng1-wrapper\">\r\n                                    <div className=\"pd-lng1\" data-tip data-for=\"homeTip\"></div>\r\n                                </div>\r\n                            </Link> \r\n\r\n                            <Link to=\"/projectdashboard/board/bhome\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"pd-lng2\" data-tip data-for=\"boardTip\">\r\n                                </div>\r\n                            </Link>\r\n\r\n                            <Link to=\"/chat/home\" style={{ textDecoration: 'none' }}>\r\n                                <div className=\"pd-chat\" data-tip data-for=\"chatTip\">\r\n                                </div>\r\n                            </Link>               \r\n\r\n                            <div className=\"pd-lng4\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"pd-lng5\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"pd-lng6\" data-tip data-for=\"calTip\"></div>\r\n                            <div className=\"pd-lng7\" data-tip data-for=\"calTip\"></div>\r\n\r\n                            <ReactTooltip id=\"homeTip\" place=\"right\" effect=\"float\" type=\"dark\">Home</ReactTooltip> \r\n                            <ReactTooltip id=\"boardTip\" place=\"right\" effect=\"float\" type=\"dark\">Board</ReactTooltip>\r\n                            <ReactTooltip id=\"chatTip\" place=\"right\" effect=\"float\" type=\"dark\">Chat</ReactTooltip> \r\n                            <ReactTooltip id=\"calTip\" place=\"right\" effect=\"float\" type=\"dark\">Calender</ReactTooltip>\r\n                                                         \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"pd-body\">\r\n                        \r\n                        <div className=\"pdb-hdn-wrapper\">\r\n\r\n                            <div className=\"pdb-hdn-left\">\r\n                                <div className=\"pdb-hl-1\"><p>Final Year Project&nbsp;🚀</p></div>\r\n                                <div className=\"pdb-hl-2\"><p>Team Lead: <span className=\"wrx\">John Doe</span></p></div>\r\n                            </div>\r\n\r\n                            <div className=\"pdb-hdn-right\">\r\n                                <div className=\"pdb-hr-1\"><p>Due By: 30-June-2021</p></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"pdb-milestones\">\r\n                            \r\n                            <p className=\"pdbm-hdn\">Milestones</p>\r\n                            <div className=\"pdbm-list\">\r\n\r\n                                <div className=\"pdbm-list-item1\">\r\n\r\n                                    <div className=\"pdbm-dot\"></div>\r\n                                    <div className=\"pdbm-task\">\r\n                                        <p>Complete Project Service</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-status\">\r\n                                        <p>Completed</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-name\">\r\n                                        <p>John Doe</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-date\">\r\n                                        <p>12-April-2021</p>\r\n                                    </div>                                                                        \r\n                                </div>\r\n\r\n                                <div className=\"pdbm-list-item1\">\r\n\r\n                                    <div className=\"pdbm-dot\"></div>\r\n                                    <div className=\"pdbm-task\">\r\n                                        <p>Complete Project Service</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-status\">\r\n                                        <p>Completed</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-name\">\r\n                                        <p>John Doe</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-date\">\r\n                                        <p>12-April-2021</p>\r\n                                    </div>                                                                        \r\n                                </div>\r\n\r\n                                <div className=\"pdbm-list-item1\">\r\n\r\n                                    <div className=\"pdbm-dot\"></div>\r\n                                    <div className=\"pdbm-task\">\r\n                                        <p>Complete Project Service</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-status\">\r\n                                        <p>Completed</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-name\">\r\n                                        <p>John Doe</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-date\">\r\n                                        <p>12-April-2021</p>\r\n                                    </div>                                                                        \r\n                                </div>\r\n\r\n                                <div className=\"pdbm-list-item1\">\r\n\r\n                                    <div className=\"pdbm-dot\"></div>\r\n                                    <div className=\"pdbm-task\">\r\n                                        <p>Complete Project Service</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-status\">\r\n                                        <p>Completed</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-name\">\r\n                                        <p>John Doe</p>\r\n                                    </div>\r\n                                    <div className=\"pdbm-date\">\r\n                                        <p>12-April-2021</p>\r\n                                    </div>                                                                        \r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\Profile\\CmpProfile.js",["112","113","114","115","116","117","118"],"import './CmpProfile.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n/* \r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nexport default class CmpProfile  extends React.Component {\r\n\r\n    constructor() {\r\n     \r\n        super();\r\n        this.state = {\r\n            fname: '',\r\n            lname: '',\r\n            email: '',\r\n            valx: false,\r\n            fnameChange: false,\r\n            lnameChange: false\r\n        }   \r\n\r\n    }   \r\n    \r\n    componentDidMount(){\r\n     \r\n        const token1 = localStorage.getItem('token');\r\n\r\n        const config = {\r\n            headers: {\r\n                'Authorization': token1,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin' : '*',\r\n            }\r\n        }\r\n    \r\n        axios.get('https://userservice-zode.herokuapp.com/api/user/', config)\r\n        .then((res) => {\r\n    \r\n            if(res.status === 200) {\r\n                this.setState({\r\n                    fname: res.data.fname,\r\n                    lname: res.data.lname,\r\n                    email: res.data.email,\r\n                    valx: true\r\n                  });\r\n            } else {\r\n\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });         \r\n    }\r\n\r\n    render() {        \r\n\r\n        return (\r\n            <div className=\"MyProfile\">\r\n\r\n                <div className=\"mp-wrapper\">\r\n                    \r\n                    { !this.state.valx ? (\r\n                        <div className=\"mp-loading\">\r\n                            <p>Loading...</p>\r\n                        </div>\r\n                    ):(\r\n                        <p></p>\r\n                    )\r\n                    }\r\n                  \r\n                    <div className=\"mp-profile-img\"></div>\r\n                    \r\n                    <div className=\"mp-inp-wrapper\">    \r\n\r\n                        <div className=\"mp-x\">\r\n\r\n                            <div className=\"mp-class1\">\r\n                                \r\n                                <div className=\"mp-fname\">\r\n                                    <p className=\"mp-name-label\">First Name</p>\r\n                                    <div><input type=\"text\" placeholder=\"\"  className=\"mp-name-inp1\" value={this.state.fname} onChange={evt => this.updateFname(evt)}></input></div>\r\n                                </div>\r\n                                \r\n                                <div className=\"mp-lname\">\r\n                                    <p className=\"mp-name-label\">Last Name</p>\r\n                                    <div className=\"mp-name-inp\"><input type=\"text\" placeholder=\"\"  className=\"mp-name-inp2\" value={this.state.lname} onChange={evt => this.updateLname(evt)}></input></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"mp-class2\">\r\n                                <p className=\"mp-email\">Email</p>\r\n                                <div><input type=\"text\" placeholder=\"\" className=\"mp-email-inp\" value={this.state.email} disabled></input></div>                            \r\n                                <div><input value=\"Update Profile\" type=\"submit\" className=\"mp-update-btn\" onClick = { this.updateProfile } ></input></div> \r\n                                <div><input value=\"Delete Account\" type=\"submit\" className=\"mp-delete-btn\"onClick = { this.deleteAccount } ></input></div> \r\n                            </div>\r\n\r\n                            <ToastContainer />\r\n                        </div>            \r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    updateFname = (evt) => {\r\n\r\n        this.setState({\r\n            fname: evt.target.value,\r\n            fnameChange: true\r\n          });\r\n    }    \r\n\r\n    updateLname = (evt) => {\r\n\r\n        this.setState({\r\n            lname: evt.target.value,\r\n            lnameChange: true\r\n          });     \r\n    } \r\n    \r\n    updateProfile = () => {\r\n\r\n        if(this.state.fnameChange == true && this.state.lnameChange == true) {\r\n            \r\n            const token = localStorage.getItem('token');\r\n\r\n            const reqBody = {\r\n                \"fname\": this.state.fname,\r\n                \"lname\": this.state.lname\r\n            }\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin' : '*',\r\n                }\r\n            }\r\n        \r\n            axios.put('https://userservice-zode.herokuapp.com/api/user/update', reqBody, config)\r\n            .then((res) => {\r\n        \r\n                if(res.status === 200) {\r\n                    \r\n                    toast.info('First & Last Name Changed!', {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                    \r\n                    this.setState({\r\n                        lnameChange: false,\r\n                        fnameChange: false\r\n                    }); \r\n\r\n                } else {\r\n                    toast.warning('Error!', {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });  \r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            }); \r\n\r\n        } else if(this.state.fnameChange == true) {\r\n            \r\n            const token = localStorage.getItem('token');\r\n    \r\n            const reqBody = {\r\n                \"fname\": this.state.fname,\r\n            }\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin' : '*',\r\n                }\r\n            }\r\n        \r\n            axios.put('https://userservice-zode.herokuapp.com/api/user/update', reqBody, config)\r\n            .then((res) => {\r\n        \r\n                if(res.status === 200) {\r\n                    \r\n                    toast.info('First Name Changed!', {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n\r\n                    this.setState({\r\n                        fnameChange: false\r\n                    }); \r\n\r\n                } else {\r\n                    toast.warning('Error!', {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });  \r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            }); \r\n\r\n        } else if(this.state.lnameChange == true){\r\n            \r\n            const token = localStorage.getItem('token');\r\n    \r\n            const reqBody = {\r\n                \"lname\": this.state.lname\r\n            }\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin' : '*',\r\n                }\r\n            }\r\n        \r\n            axios.put('https://userservice-zode.herokuapp.com/api/user/update', reqBody, config)\r\n            .then((res) => {\r\n        \r\n                if(res.status === 200) {\r\n                    \r\n                    toast.info('Last Name Changed!', {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n\r\n                    this.setState({\r\n                        lnameChange: false\r\n                    }); \r\n\r\n                } else {\r\n                    toast.warning('Error!', {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });  \r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            }); \r\n\r\n        } else {\r\n            alert('Nothing Updated!')\r\n        }     \r\n    }      \r\n \r\n    deleteAccount = () => {\r\n\r\n        var r = window.confirm(\"Confirm: Delete Account\");\r\n        if(r == true) {\r\n            toast.error('Account Deleted!', {\r\n                position: \"bottom-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            }); \r\n        } else {\r\n\r\n        } \r\n    \r\n    }     \r\n}","F:\\projects\\zod-frontend\\zod\\src\\components\\BaseDashboard\\PendingInvites\\CmpPending.js",["119","120"],"import './CmpPending.css';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport firebase from 'firebase';\r\n\r\n/* \r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nexport default class CmpPending  extends React.Component {\r\n\r\n    constructor() {\r\n     \r\n        super();\r\n        this.state = {\r\n            apiData: null,\r\n            isEmpty: false\r\n        }   \r\n\r\n    }   \r\n    \r\n    componentDidMount(){\r\n\r\n        this.timer = setInterval(\r\n            () => {\r\n                console.log(\"CALLED\");\r\n                firebase.auth().onAuthStateChanged(function(user) {\r\n                    if (user) {\r\n                        // User is signed in.\r\n                        firebase.auth().currentUser.getIdToken(true) // here we force a refresh\r\n                        .then(function(token) {\r\n                            localStorage.setItem(\"token\", token);\r\n                        }).catch(function(error) {\r\n                        if (error) throw error\r\n                    });\r\n                } else {\r\n                  // No user is signed in.\r\n                  alert(\"User not signed in!\");\r\n                }\r\n              });\r\n            },\r\n            600000, //10 mins\r\n        );        \r\n     \r\n        const token = localStorage.getItem('token');\r\n\r\n        const config = {\r\n            headers: {\r\n                'Authorization': token,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin' : '*',\r\n            }\r\n        }\r\n    \r\n        axios.get('https://projectservice-zode.herokuapp.com/api/projects/invites', config)\r\n        .then((res) => {\r\n    \r\n            if(res.status === 200) {\r\n                this.setState({ apiData: res.data });\r\n                if(res.data == null) {\r\n                    this.setState({ isEmpty: true });\r\n                } else {\r\n                    this.setState({ isEmpty: false }); \r\n                }\r\n            } else {\r\n\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });         \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    acceptfn(pid) {\r\n\r\n        const atoken = localStorage.getItem('token');\r\n\r\n        const config = {\r\n            headers: {\r\n                'Authorization': atoken,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin' : '*',\r\n            }\r\n        }\r\n        \r\n        const reqBody = {\r\n            \"projectID\": pid\r\n        }\r\n\r\n        axios.put('https://projectservice-zode.herokuapp.com/api/projects/acceptInvite', reqBody, config)\r\n        .then((res) => {\r\n    \r\n            if(res.status === 200) {\r\n                toast.info('Accepted!', {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 3000);\r\n                \r\n            } else {\r\n                toast.warning('Error!', {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });  \r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });         \r\n    }\r\n\r\n    rejectfn(pid) {\r\n\r\n        const rtoken = localStorage.getItem('token');\r\n\r\n        const config = {\r\n            headers: {\r\n                'Authorization': rtoken,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin' : '*',\r\n            }\r\n        }\r\n        \r\n        const reqBody = {\r\n            \"projectID\": pid\r\n        }\r\n\r\n        axios.put('https://projectservice-zode.herokuapp.com/api/projects/rejectinvite', reqBody, config)\r\n        .then((res) => {\r\n    \r\n            if(res.status === 200) {\r\n                toast.info('Rejected!', {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 3000);\r\n\r\n            } else {\r\n                toast.warning('Error!', {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });  \r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });          \r\n    }\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div className=\"cmpPI\">\r\n    \r\n                <div className=\"cpi-wrapper\">\r\n\r\n                    { !this.state.apiData ? (\r\n                        \r\n                        this.state.isEmpty ? (\r\n                            \r\n                            <div className=\"cpi-empty\">\r\n                                <p>No Pending Invites!</p>\r\n                            </div>\r\n                        ): (\r\n                            <div className=\"cpi-loading\">\r\n                                <p>Loading...</p>\r\n                            </div>\r\n                        )\r\n\r\n                    ):( this.state.apiData.map(zdata => (\r\n\r\n                        <div className=\"cpi-box\">\r\n                    \r\n                            <div className=\"cpi-box-item1\">\r\n                                <div className=\"cpi-box-item1-wrapper\">\r\n                                    <p className=\"cpiY\">Project Name: {JSON.parse(JSON.stringify(zdata.projectName))}</p>\r\n                                    <p className=\"cpiY qw\">Invited By: {JSON.parse(JSON.stringify(zdata.teamlead))}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"cpi-box-item2\">\r\n                                <div><input value=\"Accept\" type=\"submit\" className=\"cpi-acceptBtn\" onClick={ () => this.acceptfn(zdata._id) }></input></div>\r\n                            </div>\r\n                            <div className=\"cpi-box-item3\">\r\n                                <div><input value=\"Reject\" type=\"submit\" className=\"cpi-rejectBtn\" onClick={ () => this.rejectfn(zdata._id) }></input></div>\r\n                            </div>\r\n                        </div>\r\n                    )))}             \r\n    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}    ","F:\\projects\\zod-frontend\\zod\\src\\components\\Chat\\DynamicChatDisplay.js",["121","122","123","124","125","126","127"],"import addMemberIcon from '../../assets/add-member-svg.svg';\r\nimport videoCallIcon from '../../assets/video-call-icon.svg';\r\nimport moreOptionsIcon from '../../assets/more-options.svg';\r\nimport emojiIcon from '../../assets/emoji_icon.svg';\r\nimport attachIcon from '../../assets/attachment_icon.svg';\r\nimport sendIcon from '../../assets/send_msg_icon.svg';\r\nimport ChatSVG from '../../assets/Chat-Home.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './DynamicChatDisplay.css';\r\n\r\nlet channels = [];\r\nfunction DynamicChatDisplay(props) {\r\n    function displayDropDown () {\r\n        let displayValue = document.getElementById(\"dcd-more-options\").style.display;\r\n        console.log(displayValue);\r\n        if(displayValue == \"none\") {\r\n            document.getElementById(\"dcd-more-options\").style.display = \"block\";\r\n        }\r\n        else {\r\n            document.getElementById(\"dcd-more-options\").style.display = \"none\";\r\n        }    \r\n    }\r\n    if(props.channelname != 'default') {\r\n    return(\r\n        <div className=\"dcd-display\">\r\n        <div className=\"dcd-wrapper\">\r\n            <div className=\"dcd-header\">\r\n                <h3>{props.projectname} / {props.channelname}</h3>\r\n                <div className=\"dcd-icon-tray\">\r\n                    <img src={addMemberIcon} alt=\"Add Member\"></img>\r\n                    <img src={videoCallIcon} alt=\"Video Call\"></img>\r\n                    <img src={moreOptionsIcon} alt=\"More Options\" className=\"dcd-more-options-icon\" onClick={displayDropDown}></img>\r\n                </div>\r\n                <div className=\"dcd-more-options\" id=\"dcd-more-options\">\r\n                    <p>Edit Channel</p>\r\n                    <p>Leave Channel</p>\r\n                    <p>Delete Channel</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"dcd-textbox\">\r\n            <textarea></textarea>\r\n            <div className=\"dcd-icon-chat-tray\">\r\n                <img className=\"dcd-emoji-icon\" src={emojiIcon}></img>\r\n                <img className=\"dcd-attach-icon\" src={attachIcon}></img>\r\n            </div>\r\n            <img className=\"dcd-send-icon\" src={sendIcon}></img>\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n        <div className=\"ch-default-display\">\r\n                <img src={ChatSVG} alt=\"Chat SVG\" className=\"ch-chat-svg\"></img>\r\n                <div className=\"ch-chat-instrns\">\r\n                    <span>Click on a channel or personal chat to begin a conversation.</span>\r\n                    <span>No channels created? Click <Link to=\"/chat/createChannel\">here</Link> to create one.</span>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DynamicChatDisplay;","F:\\projects\\zod-frontend\\zod\\src\\functions\\refreshToken.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":11,"column":8,"nodeType":"134","messageId":"135","endLine":11,"endColumn":16},{"ruleId":"132","severity":1,"message":"136","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":10,"column":5,"nodeType":"139","endLine":10,"endColumn":20,"suggestions":"140"},{"ruleId":"132","severity":1,"message":"141","line":64,"column":13,"nodeType":"134","messageId":"135","endLine":64,"endColumn":22},{"ruleId":"132","severity":1,"message":"142","line":2,"column":16,"nodeType":"134","messageId":"135","endLine":2,"endColumn":21},{"ruleId":"132","severity":1,"message":"136","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":22,"column":18,"nodeType":"145","messageId":"146","endLine":22,"endColumn":20},{"ruleId":"143","severity":1,"message":"147","line":36,"column":31,"nodeType":"145","messageId":"146","endLine":36,"endColumn":33},{"ruleId":"132","severity":1,"message":"142","line":2,"column":16,"nodeType":"134","messageId":"135","endLine":2,"endColumn":21},{"ruleId":"132","severity":1,"message":"142","line":1,"column":16,"nodeType":"134","messageId":"135","endLine":1,"endColumn":21},{"ruleId":"132","severity":1,"message":"142","line":2,"column":16,"nodeType":"134","messageId":"135","endLine":2,"endColumn":21},{"ruleId":"132","severity":1,"message":"148","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":14},{"ruleId":"132","severity":1,"message":"136","line":4,"column":17,"nodeType":"134","messageId":"135","endLine":4,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":129,"column":35,"nodeType":"145","messageId":"146","endLine":129,"endColumn":37},{"ruleId":"143","severity":1,"message":"144","line":129,"column":69,"nodeType":"145","messageId":"146","endLine":129,"endColumn":71},{"ruleId":"143","severity":1,"message":"144","line":182,"column":42,"nodeType":"145","messageId":"146","endLine":182,"endColumn":44},{"ruleId":"143","severity":1,"message":"144","line":233,"column":42,"nodeType":"145","messageId":"146","endLine":233,"endColumn":44},{"ruleId":"143","severity":1,"message":"144","line":292,"column":14,"nodeType":"145","messageId":"146","endLine":292,"endColumn":16},{"ruleId":"132","severity":1,"message":"148","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":14},{"ruleId":"132","severity":1,"message":"149","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":24},{"ruleId":"132","severity":1,"message":"150","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":13},{"ruleId":"132","severity":1,"message":"151","line":12,"column":5,"nodeType":"134","messageId":"135","endLine":12,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":17,"column":25,"nodeType":"145","messageId":"146","endLine":17,"endColumn":27},{"ruleId":"143","severity":1,"message":"147","line":24,"column":26,"nodeType":"145","messageId":"146","endLine":24,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":45,"column":17,"nodeType":"154","endLine":45,"endColumn":65},{"ruleId":"152","severity":1,"message":"153","line":46,"column":17,"nodeType":"154","endLine":46,"endColumn":67},{"ruleId":"152","severity":1,"message":"153","line":48,"column":13,"nodeType":"154","endLine":48,"endColumn":59},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'ChatHome' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDisabled'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [seconds] as a second argument to the useEffect Hook.","MemberExpression",["157"],"'errorCode' is assigned a value but never used.","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'ToastContainer' is defined but never used.","'axios' is defined but never used.","'channels' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},"Add dependencies array: [seconds]",{"range":"160","text":"161"},[761,761],", [seconds]"]