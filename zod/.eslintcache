[{"F:\\projects\\zod-frontend\\zod\\src\\index.js":"1","F:\\projects\\zod-frontend\\zod\\src\\reportWebVitals.js":"2","F:\\projects\\zod-frontend\\zod\\src\\App.js":"3","F:\\projects\\zod-frontend\\zod\\src\\components\\Login\\Login.js":"4","F:\\projects\\zod-frontend\\zod\\src\\components\\SignUp\\SignUp.js":"5","F:\\projects\\zod-frontend\\zod\\src\\components\\ConfirmEmail\\ConfirmEmail.js":"6","F:\\projects\\zod-frontend\\zod\\src\\components\\Dashboard\\BaseDashboard\\CreateProject.js":"7","F:\\projects\\zod-frontend\\zod\\src\\components\\Home\\Home.js":"8","F:\\projects\\zod-frontend\\zod\\src\\components\\Dashboard\\BaseDashboard\\Base.js":"9","F:\\projects\\zod-frontend\\zod\\src\\components\\ResetPassword\\ResetPassword.js":"10","F:\\projects\\zod-frontend\\zod\\src\\components\\Dashboard\\BaseDashboard\\CmpProfile.js":"11","F:\\projects\\zod-frontend\\zod\\src\\components\\Dashboard\\BaseDashboard\\PendingInvites-MyProfile.js":"12","F:\\projects\\zod-frontend\\zod\\src\\components\\Dashboard\\BaseDashboard\\Profile-MyProfile.js":"13","F:\\projects\\zod-frontend\\zod\\src\\components\\Dashboard\\BaseDashboard\\CmpPending.js":"14"},{"size":615,"mtime":1617953408806,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1617953408806,"results":"17","hashOfConfig":"16"},{"size":2043,"mtime":1618669618881,"results":"18","hashOfConfig":"16"},{"size":3077,"mtime":1618463891969,"results":"19","hashOfConfig":"16"},{"size":4102,"mtime":1618462804183,"results":"20","hashOfConfig":"16"},{"size":2403,"mtime":1618462804181,"results":"21","hashOfConfig":"16"},{"size":6678,"mtime":1618847404280,"results":"22","hashOfConfig":"16"},{"size":5613,"mtime":1617953408804,"results":"23","hashOfConfig":"16"},{"size":7141,"mtime":1618986025192,"results":"24","hashOfConfig":"16"},{"size":1391,"mtime":1618462804183,"results":"25","hashOfConfig":"16"},{"size":2783,"mtime":1618862655687,"results":"26","hashOfConfig":"16"},{"size":2072,"mtime":1618669832606,"results":"27","hashOfConfig":"16"},{"size":2073,"mtime":1618669509564,"results":"28","hashOfConfig":"16"},{"size":1940,"mtime":1618670931331,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"zanpg5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"F:\\projects\\zod-frontend\\zod\\src\\index.js",[],["64","65"],"F:\\projects\\zod-frontend\\zod\\src\\reportWebVitals.js",[],"F:\\projects\\zod-frontend\\zod\\src\\App.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Login\\Login.js",["66"],"import './Login.css';\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nimport React from 'react';\r\nimport { useCookies } from 'react-cookie';\r\n\r\n\r\nconst { useState } = React;\r\nfunction LoginPage() {\r\n    const [email, setemailValue] = useState('');\r\n    const [password, setPasswordValue] = useState('');\r\n    \r\n    const handleEmailChange = (e) => setemailValue(e.target.value);\r\n    const handlepasswordChange = (e) => setPasswordValue(e.target.value);\r\n    const [cookies, setCookie] = useCookies(['token']);\r\n    return (\r\n        <div className=\"LoginPage\">\r\n            <span className=\"zod-title\">zode</span>\r\n            <p className=\"zod-tagline\">Collaboration platform for software development teams</p>\r\n                <div className=\"card zod-logincard\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Login to your account</h5>\r\n                        <div className=\"zod-login-inputs\">\r\n                            <input type=\"text\" placeholder=\"Enter email\" className=\"zod-login-grp form-control\" value={email} onChange={handleEmailChange}></input>\r\n                            <input type=\"password\" placeholder=\"Enter password\" className=\"zod-login-grp form-control\" value={password} onChange={handlepasswordChange}></input>\r\n                            <input type=\"submit\" value=\"Login\" className=\"zod-login-btn zod-login-grp\" onClick={LoginRequest.bind(this, email, password, setCookie)}/>\r\n                            <hr/>\r\n                            <button type=\"submit\" className=\"zod-google-btn\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"Google Logo\"></img>Login with Google</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <span className=\"zod-logintxt\">Don't have an account? <Link to=\"/signup\" style={{ textDecoration: 'none', color: '#000', fontWeight: 'bold' }}>Sign Up</Link></span>\r\n            <footer>\r\n                <ul>\r\n                    <li>Privacy & Terms</li>\r\n                    <li>Contact Us</li>\r\n                </ul>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LoginRequest(email, password, setCookie) {\r\n    \r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n        // Signed in\r\n        var user = userCredential.user;\r\n        console.log(user.za);\r\n        if(user.emailVerified) {\r\n            setCookie('token', user.za, {maxAge: 60000});\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/basedashboard/home';\r\n        }\r\n        else {\r\n            setCookie('token', email);\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/confirmEmail';\r\n        }\r\n        \r\n    })\r\n    .catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode + ' ' + errorMessage);\r\n    });\r\n}\r\n\r\nexport default LoginPage;","F:\\projects\\zod-frontend\\zod\\src\\components\\SignUp\\SignUp.js",["67","68"],"import React, { useEffect } from 'react';\r\nimport './SignUp.css';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst { useState } = React;\r\n\r\nfunction SignUpPage() {    \r\n    const [fname, setfNameValue] = useState('');\r\n    const [lname, setlNameValue] = useState('');\r\n    const [email, setemailValue] = useState('');\r\n    const [password, setPasswordValue] = useState('');\r\n    const [cpassword, setCPasswordValue] = useState('');\r\n    const [cookies, setCookie] = useCookies(['token']);\r\n\r\n    const handlefNameChange = (e) => setfNameValue(e.target.value);\r\n    const handlelNameChange = (e) => setlNameValue(e.target.value);\r\n    const handleEmailChange = (e) => setemailValue(e.target.value);\r\n    const handlepasswordChange = (e) => setPasswordValue(e.target.value);\r\n    const handleCPasswordChange = (e) => setCPasswordValue(e.target.value);\r\n    \r\n    return (\r\n        <div className=\"SignUpPage\">\r\n            <span className=\"zod-title\">zode</span>\r\n            <p className=\"zod-tagline\">Collaboration platform for software development teams</p>\r\n                <div className=\"card zod-signupcard\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Create a new account</h5>\r\n                        <div className=\"zod-signup-inputs\">\r\n                            <div className=\"input-group\"> \r\n                                <input type=\"text\" className=\"form-control input-sm zod-name-grp\" placeholder=\"First Name\" value={fname} onChange={handlefNameChange}/> \r\n                                <span className=\"input-group-btn\"></span> \r\n                                <input type=\"text\" className=\"form-control input-sm zod-name-grp\" placeholder=\"Last Name\" value={lname} onChange={handlelNameChange}/> \r\n                            </div> \r\n                            <input type=\"text\" placeholder=\"Email\" className=\"zod-signup-grp form-control\" value={email} onChange={handleEmailChange}></input>\r\n                            <input type=\"password\" placeholder=\"Password\" className=\"zod-signup-grp form-control\" value={password} onChange={handlepasswordChange}></input>\r\n                            <input type=\"password\" placeholder=\"Confirm Password\" className=\"zod-signup-grp form-control\" value={cpassword} onChange={handleCPasswordChange}></input>\r\n                            <input type=\"submit\" value=\"Sign Up\" className=\"zod-signup-btn zod-signup-grp\" onClick={SignUpRequest.bind(this, fname, lname, email, password, setCookie)}/>\r\n                            <hr/>\r\n                            <button type=\"submit\" className=\"zod-google-btn-1\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"Google Logo\"></img>Sign up with Google</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <span className=\"zod-signuptxt\">Already have an account? <Link to=\"/login\" style={{ textDecoration: 'none', color: '#000', fontWeight: 'bold' }}>Login</Link></span>\r\n            <footer className=\"zod-footer\">\r\n                <ul>\r\n                    <li>Privacy & Terms</li>\r\n                    <li>Contact Us</li>\r\n                </ul>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nasync function SignUpRequest(fname, lname, email, password, setCookie) {\r\n    const reqBody = {\r\n        \"fname\": fname,\r\n        \"lname\": lname,\r\n        \"email\": email, \r\n        \"password\": password\r\n    }\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin' : '*'\r\n        }\r\n    }\r\n    axios.post('https://userservice-zode.herokuapp.com/api/user/signup', reqBody, config).then((response) => {\r\n        if(response.status === 201) {\r\n            alert(\"Success! User Created.\");\r\n            setCookie('token', email);\r\n            window.location.href = window.location.protocol + '//' + window.location.host + '/confirmEmail';\r\n        }\r\n    });\r\n}\r\n\r\nexport default SignUpPage;","F:\\projects\\zod-frontend\\zod\\src\\components\\ConfirmEmail\\ConfirmEmail.js",["69","70"],"import './ConfirmEmail.css';\r\nimport sendMsgSVG from '../../assets/send-message.svg';\r\nimport React from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport axios from 'axios';\r\n\r\nfunction ConfirmEmail() {\r\n    const [seconds, setSeconds] = React.useState(30);\r\n    let [isDisabled, setDisabled] = React.useState(false);\r\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\r\n    var btn = document.getElementById('resend-btn');\r\n    React.useEffect(() => {\r\n        if (seconds > 0) {\r\n            setDisabled(true);\r\n            setTimeout(() => setSeconds(seconds - 1), 1000);\r\n        } else {\r\n            setDisabled(false);  \r\n            setSeconds(0);\r\n        }\r\n\r\n        const cleanup = () => {\r\n            removeCookie(\"token\");\r\n        }\r\n        \r\n        window.addEventListener('beforeunload', cleanup);\r\n        \r\n    });\r\n\r\n    async function handleBtnClicked() {\r\n        const reqBody = {\r\n            \"email\": cookies.token, \r\n        }\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }\r\n        axios.post('https://userservice-zode.herokuapp.com/api/user/resendverificationemail', reqBody, config).then((response) => {\r\n            if(response.status === 200) {\r\n                alert(\"Verification Email sent to your mail. Please check.\");\r\n            }\r\n        })\r\n        \r\n        btn.setAttribute(\"disabled\",\"\");\r\n        setSeconds(30);\r\n        setTimeout(()=> {\r\n            document.getElementById('resend-btn').removeAttribute('disabled');\r\n        }, 30000);\r\n    }\r\n    return(\r\n        <div className=\"ConfirmEmailPage\">\r\n            <span className=\"zod-ctitle\">zode</span>\r\n            <div className=\"sendMsg-svg\">\r\n                <img src={sendMsgSVG} alt=\"send email svg\" className=\"send-svg\"></img>\r\n            </div>\r\n            <div className=\"zod-cheading\">\r\n                <h1>You're almost there!</h1>\r\n                <p>We have sent a verificaton email to {cookies.token}.<br></br>Please click the link to verify your account.</p>\r\n            </div>\r\n            <div className=\"zod-mail-timer\">\r\n                <p>Didn't receive the mail? <button id=\"resend-btn\" disabled={isDisabled} onClick={handleBtnClicked.bind()}>Resend</button> in {seconds} seconds.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmEmail;","F:\\projects\\zod-frontend\\zod\\src\\components\\Dashboard\\BaseDashboard\\CreateProject.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Home\\Home.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Dashboard\\BaseDashboard\\Base.js",["71"],"F:\\projects\\zod-frontend\\zod\\src\\components\\ResetPassword\\ResetPassword.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Dashboard\\BaseDashboard\\CmpProfile.js",["72"],"import './CmpProfile.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n/* \r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nfunction CmpProfile() {\r\n\r\n    const upadteProfile = () => {\r\n\r\n        toast.info('Project Updated!', {\r\n            position: \"bottom-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });     \r\n    }\r\n\r\n    const deleteAccount = () => {\r\n        \r\n        toast.error('Account Deleted!', {\r\n            position: \"bottom-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });     \r\n    }    \r\n\r\n    return (\r\n        <div className=\"MyProfile\">\r\n\r\n            <div className=\"mp-wrapper\">\r\n                \r\n                <div className=\"mp-profile-img\"></div>\r\n                \r\n                <div className=\"mp-inp-wrapper\">    \r\n\r\n                    <div className=\"mp-x\">\r\n\r\n                        <div className=\"mp-class1\">\r\n                            \r\n                            <div className=\"mp-fname\">\r\n                                <p className=\"mp-name-label\">First Name</p>\r\n                                <div><input type=\"text\" placeholder=\"\"  className=\"mp-name-inp1\"></input></div>\r\n                            </div>\r\n                            \r\n                            <div className=\"mp-lname\">\r\n                                <p className=\"mp-name-label\">Last Name</p>\r\n                                <div className=\"mp-name-inp\"><input type=\"text\" placeholder=\"\"  className=\"mp-name-inp2\"></input></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"mp-class2\">\r\n                            <p className=\"mp-email\">Email</p>\r\n                            <div><input type=\"text\" placeholder=\"\" className=\"mp-email-inp\"></input></div>                            \r\n                            <div><input value=\"Update Profile\" type=\"submit\" className=\"mp-update-btn\" onClick = { upadteProfile } ></input></div> \r\n                            <div><input value=\"Delete Account\" type=\"submit\" className=\"mp-delete-btn\"onClick = { deleteAccount } ></input></div> \r\n                        </div>\r\n\r\n                        <ToastContainer />\r\n                    </div>            \r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CmpProfile;","F:\\projects\\zod-frontend\\zod\\src\\components\\Dashboard\\BaseDashboard\\PendingInvites-MyProfile.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Dashboard\\BaseDashboard\\Profile-MyProfile.js",[],"F:\\projects\\zod-frontend\\zod\\src\\components\\Dashboard\\BaseDashboard\\CmpPending.js",["73"],"import './CmpPending.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* \r\n    ClassName Convention Used:-\r\n        Eg: mp-top-nav -> MyProfile-top-nav ..\r\n*/\r\n\r\nfunction CmpPending() {\r\n    return (\r\n        <div className=\"cmpPI\">\r\n\r\n            <div className=\"cpi-wrapper\">\r\n\r\n                <div className=\"cpi-box\">\r\n            \r\n                    <div className=\"cpi-box-item1\">\r\n                        <div className=\"cpi-box-item1-wrapper\">\r\n                            <p className=\"cpiY\">Project Name: Project X</p>\r\n                            <p className=\"cpiY qw\">Invited By: John Doe</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"cpi-box-item2\">\r\n                        <div><input value=\"Accept\" type=\"submit\" className=\"cpi-acceptBtn\"></input></div>\r\n                    </div>\r\n                    <div className=\"cpi-box-item3\">\r\n                        <div><input value=\"Reject\" type=\"submit\" className=\"cpi-rejectBtn\"></input></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"cpi-box\">\r\n            \r\n                    <div className=\"cpi-box-item1\">\r\n                        <div className=\"cpi-box-item1-wrapper\">\r\n                            <p className=\"cpiY\">Project Name: Project X</p>\r\n                            <p className=\"cpiY qw\">Invited By: John Doe</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"cpi-box-item2\">\r\n                        <div><input value=\"Accept\" type=\"submit\" className=\"cpi-acceptBtn\"></input></div>\r\n                    </div>\r\n                    <div className=\"cpi-box-item3\">\r\n                        <div><input value=\"Reject\" type=\"submit\" className=\"cpi-rejectBtn\"></input></div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CmpPending;",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":15,"column":12,"nodeType":"80","messageId":"81","endLine":15,"endColumn":19},{"ruleId":"78","severity":1,"message":"82","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":15,"column":12,"nodeType":"80","messageId":"81","endLine":15,"endColumn":19},{"ruleId":"78","severity":1,"message":"83","line":10,"column":21,"nodeType":"80","messageId":"81","endLine":10,"endColumn":30},{"ruleId":"84","severity":1,"message":"85","line":12,"column":5,"nodeType":"86","endLine":12,"endColumn":20,"suggestions":"87"},{"ruleId":"78","severity":1,"message":"88","line":16,"column":13,"nodeType":"80","messageId":"81","endLine":16,"endColumn":20},{"ruleId":"78","severity":1,"message":"89","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},{"ruleId":"78","severity":1,"message":"89","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'cookies' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDisabled'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [seconds, removeCookie] as a second argument to the useEffect Hook.","MemberExpression",["92"],"'apidata' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Add dependencies array: [seconds, removeCookie]",{"range":"95","text":"96"},[865,865],", [seconds, removeCookie]"]